/////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2021 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available under the terms
// of the MIT License which is available at https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
/////////////////////////////////////////////////////////////////////////////////

include::_part_attributes.asciidoc[]

[[developer-upgrade-instructions-chapter-index]]
== Upgrade instructions

To upgrade to a new Eclipse Platform/IDE/SDK version:

* Version updates
** Look up Orbit version for the new Eclipse Platform/IDE/SDK release, see
https://download.eclipse.org/tools/orbit/downloads/.
** Update Oomph setup, configuring new Eclipse and Orbit versions.
** Update `dev-env-setup.asciidoc` to match new Eclipse version.
** Update `org.eclipse.platform` version for the product feature (`org.eclipse.escet.product.feature` project).
** Update Eclipse and Orbit update site URLs in product.

* New development environment
** <<developer-dev-env-setup-chapter-index,Set up a new development environment>>.
** Commit target platform changes after regenerated by Oomph.
** Check workspace for any errors/warnings and address them if any.
** Check _New and Noteworthy_ (release notes) for changes and adapt as necessary.

* Batik dependencies
** Check what version of Batik is provided on the new Orbit version.
** Update the version constraints for Batik in the Oomph setup.
** Update the version constraints for Batik in plug-in manifests.

* Java formatter profile
** Make a dummy change to the Eclipse ESCET Java formatter profile, and change it back.
** Compare the new configuration against the old configuration, to see if there are any new settings.
** In case of new settings, configure them as desired.
** Reformat all Java code using the new formatter profile.
** Update the formatter profile in the Oomph setup.

* Java errors/warnings settings
** Check the properties of the `org.eclipse.escet.common.java` project, under menu:Java Compiler[Errors/Warnings].
** Make a dummy change and change it back.
** In case of changes to `*.prefs` files in `.settings`, configure the new settings as desired.
** Run `misc/java-code-style/copy_here.bash ../../common/org.eclipse.escet.common.java` from `misc/java-code-style`
to copy the new settings to the central place.
** Run `misc/java-code-style/copy_there.bash` from `misc/java-code-style` to copy the new settings to all relevant
projects.
** Force a rebuild in Eclipse and check for any warnings/errors, addressing them if any.

* Validation
** Run a <<developer-building-and-testing-chapter-index,Maven build>>.
** Ensure no errors or warning during Maven build.

To upgrade to a new Tycho version:

* Update version in `org.eclipse.escet.root/.mvn/extensions.xml`.
* Update version in `org.eclipse.escet.configuration/pom.xml`.
* Check Tycho release notes for changes and adapt as necessary.
* Run a <<developer-building-and-testing-chapter-index,Maven build>>.
* Ensure no errors or warning during Maven build.

To upgrade to a new Java version:

* For major Java versions (e.g. 11 to 12):
** Update `Bundle-RequiredExecutionEnvironment` for all plug-in manifests.
** Update `JRE_CONTAINER` in all `.classpath` files.
** Update `JRE_CONTAINER` in all launch configurations.
** Update Java versions in `org.eclipse.jdt.core.prefs` files.
** Update `osgi.requiredJavaVersion` in the product.
** Update Java `source` and `target` versions in `RuntimeJavaCompiler` class.
** Update Java version for `executionEnvironment` in `org.eclipse.escet.configuration/pom.xml`.
** Update Java version in `Jenkinsfile`.

* For any Java versions (e.g. 11 to 12, or 11.0.1 to 11.0.2):
** Update the JustJ version in the Oomph setup (`eclipse.justj.version.*` variables).
** Regenerate the target platform file using Oomph.
** Update the JustJ version in the product.
** Update `dev-env-setup.asciidoc` to match new Java version.
** Force a rebuild in Eclipse and check for any warnings/errors, addressing them if any.
** Run a <<developer-building-and-testing-chapter-index,Maven build>>.
** Ensure no errors or warning during Maven build.
