//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

package org.eclipse.escet.common.raildiagrams.parser;

import java.util.List;

import org.eclipse.escet.common.java.Optional;
import org.eclipse.escet.common.raildiagrams.railroad.DiagramElement;
import org.eclipse.escet.common.raildiagrams.railroad.RailRule;
import org.eclipse.escet.setext.runtime.Parser;
import org.eclipse.escet.setext.runtime.Token;

/**
 * Call back hook methods for:
 * <ul>
 *  <li>{@link RailRoadScanner}</li>
 *  <li>{@link RailRoadParser}</li>
 * </ul>
 */
public final class ParserHooks
implements RailRoadScanner.Hooks,
           RailRoadParser.Hooks
{
    @Override
    public void setParser(Parser<?> parser) {
    }

    @Override
    public void dropOuter(Token token) {
    }

    @Override // specification : rule SEMI;
    public List<RailRule> parsespecification1(RailRule r1) {
        // return null;
    }

    @Override // specification : specification rule SEMI;
    public List<RailRule> parsespecification2(List<RailRule> l1, RailRule r2) {
        // return null;
    }

    @Override // rule : body1;
    public RailRule parserule1(List<DiagramElement> l1) {
        // return null;
    }

    @Override // rule : @IDENTIFIER COLON body1;
    public RailRule parserule2(Token t1, List<DiagramElement> l3) {
        // return null;
    }

    @Override // body1 : body2;
    public List<DiagramElement> parsebody11(DiagramElement d1) {
        // return null;
    }

    @Override // body1 : @BR_STRING body2;
    public List<DiagramElement> parsebody12(Token t1, DiagramElement d2) {
        // return null;
    }

    @Override // body1 : body1 PIPE body2;
    public List<DiagramElement> parsebody13(List<DiagramElement> l1, DiagramElement d3) {
        // return null;
    }

    @Override // body1 : body1 PIPE @BR_STRING body2;
    public List<DiagramElement> parsebody14(List<DiagramElement> l1, Token t3, DiagramElement d4) {
        // return null;
    }

    @Override // body2 : body3;
    public DiagramElement parsebody21(List<Optional<DiagramElement>> l1) {
        // return null;
    }

    @Override // body2 : body3 STAR body5;
    public DiagramElement parsebody22(List<Optional<DiagramElement>> l1, Optional<DiagramElement> o3) {
        // return null;
    }

    @Override // body2 : body3 PLUS body5;
    public DiagramElement parsebody23(List<Optional<DiagramElement>> l1, Optional<DiagramElement> o3) {
        // return null;
    }

    @Override // body3 : body4;
    public List<Optional<DiagramElement>> parsebody31(Optional<DiagramElement> o1) {
        // return null;
    }

    @Override // body3 : body3 body4;
    public List<Optional<DiagramElement>> parsebody32(List<Optional<DiagramElement>> l1, Optional<DiagramElement> o2) {
        // return null;
    }

    @Override // body4 : body5;
    public Optional<DiagramElement> parsebody41(Optional<DiagramElement> o1) {
        // return null;
    }

    @Override // body4 : body5 QUEST;
    public Optional<DiagramElement> parsebody42(Optional<DiagramElement> o1) {
        // return null;
    }

    @Override // body5 : @SQUOTE_STRING;
    public Optional<DiagramElement> parsebody51(Token t1) {
        // return null;
    }

    @Override // body5 : @DQUOTE_STRING;
    public Optional<DiagramElement> parsebody52(Token t1) {
        // return null;
    }

    @Override // body5 : PAROPEN body1 PARCLOSE;
    public Optional<DiagramElement> parsebody53(List<DiagramElement> l2) {
        // return null;
    }

    @Override // body5 : BSLASH_BSLASH;
    public Optional<DiagramElement> parsebody54() {
        // return null;
    }

    @Override // body5 : PAROPEN PARCLOSE;
    public Optional<DiagramElement> parsebody55() {
        // return null;
    }

    @Override // body5 : @IDENTIFIER;
    public Optional<DiagramElement> parsebody56(Token t1) {
        // return null;
    }
}
