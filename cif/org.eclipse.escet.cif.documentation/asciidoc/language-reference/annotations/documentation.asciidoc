//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2023 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

include::../_part_attributes.asciidoc[]

[[lang-ref-extensions-annotations-documentation]]
== Documentation annotations

WARNING: Annotations are currently an experimental work-in-progress language feature.
Their design may change in a backward incompatible manner.

Documentation <<lang-ref-extensions-annotations,annotations>> can be used to add documentation to CIF elements.
For basic information on documentation annotations, see the <<lang-tut-extensions-chapter-annotations-documentation,language tutorial>>.
Here we discuss further details.

Documentation annotations (`@doc`) can be added to the following elements in CIF specifications:

* Input variables.

The annotation has the following additional constraints:

* The annotation must have exactly one argument, named `text`.
* Since `text` is a keyword in the CIF language, it must be escaped to `$text`.
* The `text` argument must have a `string`-typed value.
* It must be possible for the value to be statically evaluated.
* Evaluation of the value must not result in an evaluation error.

The documentation may span multiple lines:

[source,cif]
----
@doc($text =
    "doc with multiple\n" +
    "lines of\n" +
    "text"
)
input bool i;
----

It is also possible to use for instance constants from the model in the documentation text:

[source,cif]
----
const int MAX_NR_OF_PRODUCTS = 3;

@doc($text = fmt("Sensor 1/%d.", MAX_NR_OF_PRODUCTS))
input bool s1;
----
