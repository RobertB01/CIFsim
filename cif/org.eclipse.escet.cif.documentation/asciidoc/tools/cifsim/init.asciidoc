//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2022 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

include::../_part_attributes.asciidoc[]

[[tools-cifsim-chapter-init]]
== Initialization of the CIF specification

indexterm:[CIF simulator,initialization]
CIF supports <<lang-tut-data-chapter-discrete-variables,discrete variables>> with <<lang-tut-data-discvar-init-multiple,multiple potential initial values>>, as well as discrete variables with an <<lang-tut-data-discvar-init-any,arbitrary initial value>>, and <<lang-tut-reuse2-chapter-input-variables,input variables>> without an explicit value.
Furthermore, CIF supports automata with <<lang-tut-data-init-preds-aut,multiple potential initial locations>>.
The simulator however, needs to know how to initialize the specification.
The initial values of discrete variables and input variables, and the initial locations of automata, can be specified using the _CIF specification initialization_ option (_Simulator_ category).
Initialization can be provided using the option, per discrete variable, input variable or automaton.

For discrete variables and input variables, initialization is of the form `var:value`, where `var` is the absolute name of a discrete variable or input variable, and `value` is a CIF <<lang-tut-values-types-values-exprs-literal,literal>> that represents a valid initial value for the variable.
Providing an initialization with a <<lang-tut-functions-chapter-functions-as-values,function type>> or a <<lang-tut-stochastics-chapter-intro,distribution>> type, is not supported.

For an automaton, initialization is of the form `aut:loc`, where `aut` is the absolute name of an automaton, and `loc` is the name of a location of that automaton.
Providing an initialization for an automata with only one nameless location, is not supported.

It is not allowed to provide multiple initializations for a single variable or automaton.

If insufficient initializations are provided, variables and automata may not be initialized.
That is, the simulator may not be able to choose between the multiple potential initial values or locations.
The simulator will report such problems, indicating the specification is <<tools-cifsim-chapter-supported,unsupported>> without additional or alternative initializations.

It is also possible that initializations in the CIF specification itself are incomplete or conflicting, the provided initializations are conflicting, or their combination is conflicting.
Furthermore, initializations may be provided for values or locations that are not potential initial values or locations.
In all such cases, initialization fails.
The simulator will report such problems, providing detailed information about what caused the initialization failure.
