/////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2020 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available under the terms
// of the MIT License which is available at https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
/////////////////////////////////////////////////////////////////////////////////

include::../_part_attributes.asciidoc[]

[[tools-cifsim-chapter-debug-gen-code]]
== Debugging generated code

indexterm:[CIF simulator,debug generated code]
indexterm:[debug,generated code]

WARNING: This page is primarily intended for the developers of the CIF simulator, and not its end users.

The CIF simulator generates highly optimized code for the specification, to
speed up the simulation. By enabling the
menu:Debug the generated code (by writing it to disk)[]
<<tools-cifsim-output-chapter-debug,debugging output>>,
the generated code can be written to disk, for further debugging.

=== Output directory

If the simulation is performed from within Eclipse, and a project named
`org.eclipse.escet.cif.simulator.debug` exists, is not closed, and has a `src`
directory, the generated code will be written to that `src` directory.
Otherwise, the generated code will be written to the directory containing the
input specification file.

Regardless, the code is also always written to a `cifcode`
sub-directory. If this sub-directory does not yet exist, it is created. If it
already exists, all existing `.java` files are removed from the
sub-directory first, before the newly generated code is written.


=== Written files

The generated code consists of Java files only. This results in several
`.java` files being written to the `cifcode` directory.

Additionally, an Eclipse launch configuration file (`+_cifsim_debug.launch+`)
is written. This launch configuration can be used to reproduce the simulation
implemented by the generated code. The launch configuration
reproduces the simulation options that were used, and always shows the option
dialog. The working directory for the simulation performed via the generated
launch configuration is the same working directory as the original simulation.
This allows additional files, such as configuration files, to be found.


=== How to use

To use this feature, follow these steps:

* Import all CIF related source projects into your Eclipse workspace.

* Make sure your workspace is automatically rebuilt, by enabling the
menu:Build Automatically[]
option in the
menu:Project[]
menu.

* Start a sub-Eclipse application, by right clicking on any plug-in project in
the workspace, and choosing menu:Run as[Eclipse Application]
or menu:Debug as[Eclipse Application].

* In the sub-Eclipse that opens, make sure the CIF specification (the `.cif`
file) that you like to simulate is available in the workspace.

* In the sub-Eclipse, import the `org.eclipse.escet.cif.simulator.debug` source
project.

* Simulate the CIF specification, and make sure you enable the
menu:Debug the generated code[]
option.

* Continue simulation, if desired.

* Once the simulation has terminated, switch back to the main Eclipse.

* Refresh the `org.eclipse.escet.cif.simulator.debug` project.

* Set breakpoints in the generated Java code, or in the simulator code, as
desired.

* Right click the launch configuration in the `src/cifcode` directory, and
choose menu:Debug as[_cifsim_debug].

* Debug the simulation, with the generated code, as you would any Java program.

indexterm:[CIF simulator,starting with generated code]

=== Starting the simulator with generated code

The launch configuration that is written to disk with the generated code, uses
the
menu:Load debug code[]
option (menu:Simulator[] category). Using
this option, the classpath (directory) where the already generated code is
located, is specified. By specifying it, the simulator knows from where to load
it.

Simulations not started from the generated launch configuration, generally
don't use this option. They load the input specification, validate it, generate
fresh code, and compile the code in-memory, or use
<<tools-cifsim-repeated-sim-compile-once,compiled code files>>

Simulations using the generated code ignore all options related to
<<tools-cifsim-chapter-repeated-simulation,repeated simulations>>. That is, the
_Load debug code_ option takes priority over the _Compile only_ option
(_Compiler_ category), and simulating with
<<tools-cifsim-repeated-sim-compile-once,compiled code files>>.

A warning is printed to the console if the generated code was generated with
a different version of the simulator than the one used to simulate it. Ignoring
the warning may lead to unexpected simulation results, or even simulator
crashes.
