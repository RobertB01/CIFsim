//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2024 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

include::../../../_part_attributes.asciidoc[]

[[tools-cifsim-output-svgviz-chapter-inkscape]]
== Inkscape

indexterm:[SVG,Inkscape]
indexterm:[Inkscape]
SVG images can best be edited with a drawing program that supports vector graphics.
One such program is link:https://inkscape.org/[Inkscape], a free and open source vector graphics editor that uses SVG as its native file format, and is available for many platforms, including Microsoft Windows, macOS, and Linux.
In this documentation, we'll use Inkscape to create and edit SVG images.

It is beyond the scope of this document to explain how Inkscape works.
For that, see the link:https://inkscape.org/[Inkscape website].
Here is a screenshot of the Inkscape interface:

image::{tools-imgsdir}/cifsim/output/svgviz/inkscape/inkscape.png[]

indexterm:[Inkscape,changing ids]

=== Changing ids

As described on the <<tools-cifsim-output-svgviz-chapter-svg,page about SVG>>, every SVG object has an id.
To change the id of an object in Inkscape, right click on the object, and choose menu:Object Properties...[].
The _Object Properties_ tab will appear on the right of the interface, which looks like this:

image::{tools-imgsdir}/cifsim/output/svgviz/inkscape/inkscape_props_xml.png[]

In this tab, you can change the object's id, by entering a new id in the _ID_ field, and clicking the btn:[Set] button.

indexterm:[Inkscape,XML editor]

=== XML editor

Inkscape also features an XML editor, that can be used to view and edit the underlying XML representation of the SVG image.
The screenshot above also shows Inkscape's _XML Editor_ as a window, which can be opened via menu:Edit[XML Editor...].
The XML editor can be useful to find out the exact structure of the XML tree, and to see the precise definitions that were used to represent the objects that you created on Inkscape's canvas.
Panels like the _Object Properties_ panel and the _XML Editor_ panel can be fixed to the right side of the interface as tabs or be used as floating windows.
Simply drag each panel to its preferred location.

indexterm:[Inkscape,document size]
indexterm:[Inkscape,width]
indexterm:[Inkscape,height]

[[tools-cifsim-output-svgviz-inkscape-size]]
=== Document size

It is recommended to always set the correct size of the image, before adding any shapes or text labels.
To do this, select menu:File[Document Properties...], to open the _Document Properties_ window.
On the _Display_ tab, we recommend to set _Format_ to _px_ and _Display units_ to _px_.
You can then enter the _Width_ and _Height_ of the image.
Finally, in the _XML Editor_ panel, select the root SVG element (`<svg:svg`... node) by left clicking it, and delete the _viewBox_ property by clicking the trash can icon in front of it.
This ensures that the coordinates in the XML tree are the same as those displayed on the Inkscape interface.

indexterm:[Inkscape,coordinate system]

=== Coordinate systems

The coordinate system used by SVG and Inkscape uses the upper left corner of the canvas as origin.
Inkscape uses x and y coordinates of objects relative to the outside of their border (called _stroke_ in Inkscape), while SVG uses x and y coordinates of objects relative to the middle of their border.

indexterm:[Inkscape,text area]

[[tools-cifsim-output-svgviz-inkscape-textarea]]
=== Text areas

When using the Inkscape text tool, select the tool, and left click once on the canvas to add a text label.
Once you added it, start typing text.

Inkscape also allows you to select the text tool, left click anywhere on the canvas, drag the mouse pointer to another position, and only then release the left mouse button.
This creates a text area, where text is automatically wrapped to multiple lines, so that it stays within the bounds of the text area.
