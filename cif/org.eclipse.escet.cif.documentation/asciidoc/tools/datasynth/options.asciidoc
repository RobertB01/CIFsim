indexterm:[data-based supervisory controller synthesis,options]

[[tools-datasynth-options]]
=== Options

Besides the general application options, this application several other options.

The following options are part of the _Synthesis_ category:

* _Input file path_: The absolute or relative local file system path to the input CIF specification.

* _Output file path_: The absolute or relative local file system path to the output CIF file.
If not specified, defaults to the input file path, where the `.cif` file extension is removed (if present), and a `.ctrlsys.cif` file extension is added.

* _Supervisor name_: The name of the resulting supervisor automaton.
If not specified, it defaults to `sup`.
For more information, see the section on the <<tools-datasynth-supervisor,resulting supervisor>> below.

* _Supervisor namespace_: The namespace of the resulting supervisor.
If not specified, it defaults to the empty namespace.
For more information, see the section on <<tools-datasynth-supervisor-namespace,namespaces>> below.

* _Forward reachability_: Whether to perform forward reachability during synthesis, or omit it.
Is disabled by default.
For more information, see the section on <<tools-datasynth-forward-reach,forward reachability>> below.

* _Edge order_: Synthesis involves many reachability computations.
This involves following edges (forward or backward) to find reachable states.
The order in which the edges are considered for such computations is determined by this option.
For more information, see the <<tools-datasynth-edge-order>> section below.

* _Statistics_: The kinds of statistics to print.
By default, no statistics are printed.
For more information, see the section on <<tools-datasynth-stats,statistics>> below.

* _Continuous performance statistics file_: The absolute or relative local file system path to the continuous performance statistics output file.
If not specified, defaults to the input file path, where the `.cif` file extension is removed (if present), and a `.stats.txt` file extension is added.
For more information, see the section on <<tools-datasynth-stats,statistics>> below.

* _Event warning_: Whether to warn for events that are never enabled in the input specification or never enabled in the controlled system.
Is enabled by default.
Disabling this warning may increase the performance of synthesis.

* _Plants referencing requirements warnings_: Whether to warn for plants that reference requirement state.
Is enabled by default.
Disabling this warning may increase the performance of synthesis.

Internally during synthesis, predicates are represented using link:https://en.wikipedia.org/wiki/Binary_decision_diagram[Binary Decision Diagrams] (BDDs).
There are various options that can influence the use of BDDs.
The following options are part of the _BDD_ sub-category of the _Synthesis_ category:

* _BDD output mode_: This option can be used to control how the BDDs are converted to CIF for the output of synthesis.
For more information, see the <<tools-datasynth-supervisor-bdd>> section below.

* _BDD output name prefix_: The prefix to use for BDD related names in the output.
Only has an effect if the _BDD output mode_ option is set to represent the internal BDD nodes directly in CIF.
The default prefix is `bdd`.
For more information, see the <<tools-datasynth-supervisor-bdd>> section below.

* _BDD variable order_: CIF variables and automata are represented using one or more boolean variables.
The initial order of the boolean variables is determined by this option.
For more information, see the <<tools-datasynth-var-order>> section below.

* _BDD hyper-edge creation algorithm_: CIF variables and automata are represented using one or more boolean variables.
The variable order can be improved and optimized by various variable ordering algorithms.
This option controls how hyper-edges are created, which are used by the variable ordering algorithms.
For more information, see the <<tools-datasynth-var-order>> section below.

* _BDD DCSH variable ordering algorithm_: CIF variables and automata are represented using one or more boolean variables.
The initial order of the boolean variables can be improved by enabling this option.
For more information, see the <<tools-datasynth-var-order>> section below.

* _BDD FORCE variable ordering algorithm_: CIF variables and automata are represented using one or more boolean variables.
The initial order of the boolean variables can be improved by enabling this option.
For more information, see the <<tools-datasynth-var-order>> section below.

* _BDD sliding window variable ordering algorithm_: CIF variables and automata are represented using one or more boolean variables.
The initial order of the boolean variables can be improved by enabling this option.
For more information, see the <<tools-datasynth-var-order>> section below.

* _BDD sliding window size_: The maximum length of the window to use for the BDD sliding window variable ordering algorithm.
This option only has effect if the _BDD sliding window variable ordering algorithm_ option is enabled.
The size must be an integer number in the range [1 .. 12].
The default size is 4.
For more information, see the <<tools-datasynth-var-order>> section below.

* _BDD predicate simplify_: Several BDD predicates may be simplified under the assumption of other predicates, resulting in smaller/simpler output.
This may decrease the size of the resulting controller, and may give more insight.
For more information, see the <<tools-datasynth-simplification>> section below.

* _BDD library initial node table size_: The BDD library that is used maintains an internal node table.
This option can be used to set the initial size of that node table.
The size will automatically be increased during synthesis, if necessary.
Increasing the initial size can increase performance for large systems, as it will not be necessary to repeatedly increase the size of the node table.
However, a larger node table requires more memory, and can lead to the node table no longer fitting within CPU caches, degrading performance.
The default is `100000` nodes.
The initial node table size must be in the range [1 .. 2^31^ - 1].
For more information, see the <<tools-datasynth-stats>> section.

* _BDD library operation cache size_: The BDD library that is used maintains an internal operation cache.
This option can be used to set the fixed size of that cache.
The operation cache size must be in the range [2 .. 2^31^ - 1].
By default, this option is disabled (value `off` on the command line), and the _BDD library operation cache ratio_ option is used instead.
For more information, see the <<tools-datasynth-op-cache>> section below.

* _BDD library operation cache ratio_: The BDD library that is used maintains an internal operation cache.
This option can be used to set the ratio of the size of the operation cache of the BDD library to the size of the node table of the BDD library.
For instance, a ratio of `0.1` means that the size of the operation cache is 10% of the size of the node table.
The operation cache ratio must be in the range [0.01 .. 1000].
The default ratio is 1.0.
This option has no effect if the _BDD library operation cache size_ option is enabled.
For more information, see the <<tools-datasynth-op-cache>> section below.

* _BDD debug max nodes_: Internally, predicates are represented using link:https://en.wikipedia.org/wiki/Binary_decision_diagram[Binary Decision Diagrams] (BDDs).
This option control the maximum number of BDD nodes for which to convert a BDD to a readable CNF/DNF representation for the debug output.
The default is `10` nodes.
The maximum must be in the range [1 .. 2^31^ - 1].
The option can be set to have an infinite maximum (no maximum), using option value `inf`.
For more information, see the <<tools-datasynth-dbg-output>> section below.

* _BDD debug max paths_: Internally, predicates are represented using link:https://en.wikipedia.org/wiki/Binary_decision_diagram[Binary Decision Diagrams] (BDDs).
This option control the maximum number of BDD true paths for which to convert a BDD to a readable CNF/DNF representation for the debug output.
The default is `10` paths.
The maximum must be in the range [0 .. 1.7e308].
The option can be set to have an infinite maximum (no maximum), using option value `inf`.
For more information, see the <<tools-datasynth-dbg-output>> section below.
