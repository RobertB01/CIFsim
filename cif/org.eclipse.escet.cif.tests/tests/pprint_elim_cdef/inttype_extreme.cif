//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2021 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

type rangeless = int;
type min_max   = int[-2147483647-1 .. 2147483647];
type min1_max  = int[-2147483647   .. 2147483647];
type min_max1  = int[-2147483647-1 .. 2147483646];
type min1_max1 = int[-2147483647   .. 2147483646];

group def Q(alg rangeless r; alg min_max mm; alg min1_max m1m;
            alg min_max1 mm1; alg min1_max1 m1m1):
  invariant size([r, mm, m1m, mm1, m1m1]) > 0;
end

q1: Q(p.rangeless, p.mm, p.m1m, p.mm1, p.m1m1); // same ones
q2: Q(p.mm, p.rangeless, p.m1m, p.mm1, p.m1m1); // compatible ones

automaton p:
  disc int rangeless;
  disc int[-2147483647-1 .. 2147483647] mm;
  disc int[-2147483647   .. 2147483647] m1m;
  disc int[-2147483647-1 .. 2147483646] mm1;
  disc int[-2147483647   .. 2147483646] m1m1;

  location:
    initial;
end
