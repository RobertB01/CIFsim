ERROR: CIF common checks tester failed due to unsatisfied preconditions:
 - Unsupported "ALG_VAR_REFS.a": uses boolean literal "true".
 - Unsupported "BINARY_EXPRS": uses binary expression "1 = 1".
 - Unsupported "BINARY_EXPRS": uses integer number literal "1".
 - Unsupported "BOOL_LITS": uses boolean literal "true".
 - Unsupported "CAST_EXPRS_BROADER_TYPE": uses binary expression "<real>1 = 1.0".
 - Unsupported "CAST_EXPRS_BROADER_TYPE": uses cast expression "<real>1".
 - Unsupported "CAST_EXPRS_BROADER_TYPE": uses integer number literal "1".
 - Unsupported "CAST_EXPRS_BROADER_TYPE": uses real number literal "1.0".
 - Unsupported "CAST_EXPRS_EQUAL_TYPE": uses boolean literal "true".
 - Unsupported "CAST_EXPRS_EQUAL_TYPE": uses cast expression "<bool>true".
 - Unsupported "CAST_EXPRS_TO_STR": uses binary expression ""1" = <string>1".
 - Unsupported "CAST_EXPRS_TO_STR": uses cast expression "<string>1".
 - Unsupported "CAST_EXPRS_TO_STR": uses integer number literal "1".
 - Unsupported "CAST_EXPRS_TO_STR": uses string literal ""1"".
 - Unsupported "COMP_REFS_EXPLICIT": uses boolean literal "true".
 - Unsupported "COMP_REFS_EXPLICIT": uses component reference "COMP_REFS_EXPLICIT".
 - Unsupported "COMP_REFS_EXPLICIT": uses switch expression "switch COMP_REFS_EXPLICIT: else true end".
 - Unsupported "COMP_REFS_SELF": uses boolean literal "true".
 - Unsupported "COMP_REFS_SELF": uses component reference "self".
 - Unsupported "COMP_REFS_SELF": uses switch expression "switch self: else true end".
 - Unsupported "CONST_REFS": uses constant reference "CONST_REFS.c".
 - Unsupported "CONST_REFS.c": uses boolean literal "true".
 - Unsupported "CONT_VAR_REFS": uses binary expression "CONT_VAR_REFS.c = 1.0".
 - Unsupported "CONT_VAR_REFS": uses real number literal "1.0".
 - Unsupported "CONT_VAR_REFS.c": uses real number literal "1.0".
 - Unsupported "CONT_VAR_REFS_DER": uses binary expression "CONT_VAR_REFS_DER.c' = 1.0".
 - Unsupported "CONT_VAR_REFS_DER": uses real number literal "1.0".
 - Unsupported "CONT_VAR_REFS_DER.c": uses real number literal "1.0".
 - Unsupported "DICT_LITS": uses boolean literal "false".
 - Unsupported "DICT_LITS": uses boolean literal "true".
 - Unsupported "DICT_LITS": uses dictionary literal "{true: false}".
 - Unsupported "DICT_LITS": uses projection expression "{true: false}[true]".
 - Unsupported "DISC_VAR_REFS": uses boolean literal "true".
 - Unsupported "ENUM_LIT_REFS": uses binary expression "ENUM_LIT_REFS.e1 = ENUM_LIT_REFS.e2".
 - Unsupported "FUNC_CALLS": uses binary expression "abs(1) = 1".
 - Unsupported "FUNC_CALLS": uses function call "abs(1)".
 - Unsupported "FUNC_CALLS": uses integer number literal "1".
 - Unsupported "FUNC_CALLS": uses standard library function reference "abs".
 - Unsupported "FUNC_REFS_STD_LIB": uses binary expression "abs(1) = 1".
 - Unsupported "FUNC_REFS_STD_LIB": uses function call "abs(1)".
 - Unsupported "FUNC_REFS_STD_LIB": uses integer number literal "1".
 - Unsupported "FUNC_REFS_STD_LIB": uses standard library function reference "abs".
 - Unsupported "FUNC_REFS_USER_DEF": uses function call "FUNC_REFS_USER_DEF.f()".
 - Unsupported "FUNC_REFS_USER_DEF": uses internal user-defined function reference "FUNC_REFS_USER_DEF.f".
 - Unsupported "FUNC_REFS_USER_DEF.f": uses boolean literal "true".
 - Unsupported "FUNC_REFS_USER_DEF_EXT": uses binary expression "FUNC_REFS_USER_DEF_EXT.f() = "a"".
 - Unsupported "FUNC_REFS_USER_DEF_EXT": uses external user-defined function reference "FUNC_REFS_USER_DEF_EXT.f".
 - Unsupported "FUNC_REFS_USER_DEF_EXT": uses function call "FUNC_REFS_USER_DEF_EXT.f()".
 - Unsupported "FUNC_REFS_USER_DEF_EXT": uses string literal ""a"".
 - Unsupported "grp": uses boolean literal "true".
 - Unsupported "IF_EXPRS": uses boolean literal "false".
 - Unsupported "IF_EXPRS": uses boolean literal "true".
 - Unsupported "IF_EXPRS": uses conditional expression "if true: true else false end".
 - Unsupported "INT_LITS": uses binary expression "1 = 1".
 - Unsupported "INT_LITS": uses integer number literal "1".
 - Unsupported "INT_USER_DEF_FUNC_LOCAL_VAR_REFS.f.v": uses boolean literal "true".
 - Unsupported "LIST_LITS": uses binary expression "[1] = [1]".
 - Unsupported "LIST_LITS": uses integer number literal "1".
 - Unsupported "LIST_LITS": uses list literal "[1]".
 - Unsupported "LOC_REFS.loc": uses boolean literal "true".
 - Unsupported "LOC_REFS.loc": uses location reference "LOC_REFS.loc".
 - Unsupported "nested_grp.nested_grp": uses boolean literal "true".
 - Unsupported "PROJECTION_EXPRS_DICTS": uses boolean literal "false".
 - Unsupported "PROJECTION_EXPRS_DICTS": uses boolean literal "true".
 - Unsupported "PROJECTION_EXPRS_DICTS": uses dictionary literal "{true: false}".
 - Unsupported "PROJECTION_EXPRS_DICTS": uses projection expression "{true: false}[true]".
 - Unsupported "PROJECTION_EXPRS_LISTS": uses boolean literal "false".
 - Unsupported "PROJECTION_EXPRS_LISTS": uses boolean literal "true".
 - Unsupported "PROJECTION_EXPRS_LISTS": uses integer number literal "0".
 - Unsupported "PROJECTION_EXPRS_LISTS": uses list literal "[true, false]".
 - Unsupported "PROJECTION_EXPRS_LISTS": uses projection expression "[true, false][0]".
 - Unsupported "PROJECTION_EXPRS_STRINGS": uses binary expression ""abc"[0] = "a"".
 - Unsupported "PROJECTION_EXPRS_STRINGS": uses integer number literal "0".
 - Unsupported "PROJECTION_EXPRS_STRINGS": uses projection expression ""abc"[0]".
 - Unsupported "PROJECTION_EXPRS_STRINGS": uses string literal ""a"".
 - Unsupported "PROJECTION_EXPRS_STRINGS": uses string literal ""abc"".
 - Unsupported "PROJECTION_EXPRS_TUPLES_FIELD": uses boolean literal "true".
 - Unsupported "PROJECTION_EXPRS_TUPLES_FIELD": uses projection expression "PROJECTION_EXPRS_TUPLES_FIELD.v[a]".
 - Unsupported "PROJECTION_EXPRS_TUPLES_FIELD": uses projection expression "PROJECTION_EXPRS_TUPLES_FIELD.v[b]".
 - Unsupported "PROJECTION_EXPRS_TUPLES_INDEX": uses boolean literal "false".
 - Unsupported "PROJECTION_EXPRS_TUPLES_INDEX": uses boolean literal "true".
 - Unsupported "PROJECTION_EXPRS_TUPLES_INDEX": uses integer number literal "0".
 - Unsupported "PROJECTION_EXPRS_TUPLES_INDEX": uses projection expression "((true, false), false)[0]".
 - Unsupported "PROJECTION_EXPRS_TUPLES_INDEX": uses projection expression "((true, false), false)[0][0]".
 - Unsupported "PROJECTION_EXPRS_TUPLES_INDEX": uses projection expression "(true, false)[0]".
 - Unsupported "PROJECTION_EXPRS_TUPLES_INDEX": uses tuple literal "((true, false), false)".
 - Unsupported "PROJECTION_EXPRS_TUPLES_INDEX": uses tuple literal "(true, false)".
 - Unsupported "REAL_LITS": uses binary expression "1.0 = 1.0".
 - Unsupported "REAL_LITS": uses real number literal "1.0".
 - Unsupported "RECEIVE_EXPRS": uses boolean literal "true".
 - Unsupported "RECEIVE_EXPRS": uses received value expression "?".
 - Unsupported "SET_LITS": uses binary expression "true in {true, false}".
 - Unsupported "SET_LITS": uses boolean literal "false".
 - Unsupported "SET_LITS": uses boolean literal "true".
 - Unsupported "SET_LITS": uses set literal "{true, false}".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_LIST": uses boolean literal "false".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_LIST": uses boolean literal "true".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_LIST": uses integer number literal "0".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_LIST": uses integer number literal "1".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_LIST": uses list literal "[true, false]".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_LIST": uses projection expression "[true, false][:-1][0]".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_LIST": uses slice expression "[true, false][:-1]".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_LIST": uses unary expression "-1".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_STRING": uses binary expression ""ab"[:-1][0] = "a"".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_STRING": uses integer number literal "0".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_STRING": uses integer number literal "1".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_STRING": uses projection expression ""ab"[:-1][0]".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_STRING": uses slice expression ""ab"[:-1]".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_STRING": uses string literal ""a"".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_STRING": uses string literal ""ab"".
 - Unsupported "SLICE_EXPRS.SLICE_EXPRS_STRING": uses unary expression "-1".
 - Unsupported "STRING_LITS": uses binary expression ""a" = "a"".
 - Unsupported "STRING_LITS": uses string literal ""a"".
 - Unsupported "SWITCH_EXPRS": uses boolean literal "false".
 - Unsupported "SWITCH_EXPRS": uses boolean literal "true".
 - Unsupported "SWITCH_EXPRS": uses integer number literal "5".
 - Unsupported "SWITCH_EXPRS": uses switch expression "switch 5: case 5: true else false end".
 - Unsupported "TIME_VAR_REFS": uses binary expression "time > 0".
 - Unsupported "TIME_VAR_REFS": uses integer number literal "0".
 - Unsupported "TUPLE_FIELD_REFS_NAMED": uses constant reference "TUPLE_FIELD_REFS_NAMED.c".
 - Unsupported "TUPLE_FIELD_REFS_NAMED": uses projection expression "TUPLE_FIELD_REFS_NAMED.c[a]".
 - Unsupported "TUPLE_FIELD_REFS_NAMED.c": uses boolean literal "false".
 - Unsupported "TUPLE_FIELD_REFS_NAMED.c": uses boolean literal "true".
 - Unsupported "TUPLE_FIELD_REFS_NAMED.c": uses tuple literal "(true, false)".
 - Unsupported "TUPLE_FIELD_REFS_NAMELESS": uses boolean literal "false".
 - Unsupported "TUPLE_FIELD_REFS_NAMELESS": uses boolean literal "true".
 - Unsupported "TUPLE_FIELD_REFS_NAMELESS": uses integer number literal "0".
 - Unsupported "TUPLE_FIELD_REFS_NAMELESS": uses projection expression "(true, false)[0]".
 - Unsupported "TUPLE_FIELD_REFS_NAMELESS": uses tuple literal "(true, false)".
 - Unsupported "TUPLE_LITS": uses boolean literal "false".
 - Unsupported "TUPLE_LITS": uses boolean literal "true".
 - Unsupported "TUPLE_LITS": uses integer number literal "0".
 - Unsupported "TUPLE_LITS": uses projection expression "(true, false)[0]".
 - Unsupported "TUPLE_LITS": uses tuple literal "(true, false)".
 - Unsupported "UNARY_EXPRS": uses boolean literal "true".
 - Unsupported "UNARY_EXPRS": uses unary expression "not true".
 - Unsupported specification: uses boolean literal "true".
