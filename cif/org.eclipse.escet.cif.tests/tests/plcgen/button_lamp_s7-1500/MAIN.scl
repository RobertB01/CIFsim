ORGANIZATION_BLOCK MAIN
{ S7_Optimized_Access := 'true' }

BEGIN
    IF firstRun THEN
        firstRun := FALSE;

        (* Initialize the state variables. *)
        timer := someConstantvariable;
        sup := someConstantvariable;
        hw_button := someConstantvariable;
        hw_lamp_bit := FALSE;
        hw_lamp := someConstantvariable;
    END_IF;

    isProgress := TRUE;
    WHILE isProgress DO
        isProgress := FALSE;

        (* Try to perform event "timer.start". *)
        isFeasible := TRUE;
        IF timer = someConstantvariable THEN
            syncAutEdge := 1;
        ELSE
            isFeasible := FALSE;
        END_IF;
        IF isFeasible THEN
            IF sup = someConstantvariable THEN
                syncAutEdge__1 := 1;
            ELSIF sup = someConstantvariable THEN
                syncAutEdge__1 := 2;
            ELSE
                isFeasible := FALSE;
            END_IF;
        END_IF;
        IF isFeasible THEN
            isProgress := TRUE;
            IF syncAutEdge = 1 THEN
                someContvariable := 0.0;
                timer := someConstantvariable;
            END_IF;
            IF syncAutEdge__1 = 1 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__1 = 2 THEN
                sup := someConstantvariable;
            END_IF;
        END_IF;
        (* Try to perform event "timer.timeout". *)
        isFeasible := TRUE;
        IF timer = someConstantvariable AND someContvariable >= 3.0 THEN
            syncAutEdge__2 := 1;
        ELSE
            isFeasible := FALSE;
        END_IF;
        IF isFeasible THEN
            IF sup = someConstantvariable THEN
                syncAutEdge__3 := 1;
            ELSIF sup = someConstantvariable THEN
                syncAutEdge__3 := 2;
            ELSE
                isFeasible := FALSE;
            END_IF;
        END_IF;
        IF isFeasible THEN
            isProgress := TRUE;
            IF syncAutEdge__2 = 1 THEN
                timer := someConstantvariable;
            END_IF;
            IF syncAutEdge__3 = 1 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__3 = 2 THEN
                sup := someConstantvariable;
            END_IF;
        END_IF;
        (* Try to perform event "button.push". *)
        isFeasible := TRUE;
        IF sup = someConstantvariable THEN
            syncAutEdge__4 := 1;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__4 := 2;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__4 := 3;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__4 := 4;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__4 := 5;
        ELSE
            isFeasible := FALSE;
        END_IF;
        IF isFeasible THEN
            IF hw_button = someConstantvariable AND hw_button_bit THEN
                syncAutEdge__5 := 1;
            ELSE
                isFeasible := FALSE;
            END_IF;
        END_IF;
        IF isFeasible THEN
            isProgress := TRUE;
            IF syncAutEdge__4 = 1 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__4 = 2 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__4 = 3 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__4 = 4 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__4 = 5 THEN
                sup := someConstantvariable;
            END_IF;
            IF syncAutEdge__5 = 1 THEN
                hw_button := someConstantvariable;
            END_IF;
        END_IF;
        (* Try to perform event "button.release". *)
        isFeasible := TRUE;
        IF sup = someConstantvariable THEN
            syncAutEdge__6 := 1;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__6 := 2;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__6 := 3;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__6 := 4;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__6 := 5;
        ELSE
            isFeasible := FALSE;
        END_IF;
        IF isFeasible THEN
            IF hw_button = someConstantvariable AND NOT(IN := hw_button_bit) THEN
                syncAutEdge__7 := 1;
            ELSE
                isFeasible := FALSE;
            END_IF;
        END_IF;
        IF isFeasible THEN
            isProgress := TRUE;
            IF syncAutEdge__6 = 1 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__6 = 2 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__6 = 3 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__6 = 4 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__6 = 5 THEN
                sup := someConstantvariable;
            END_IF;
            IF syncAutEdge__7 = 1 THEN
                hw_button := someConstantvariable;
            END_IF;
        END_IF;
        (* Try to perform event "lamp.on". *)
        isFeasible := TRUE;
        IF sup = someConstantvariable THEN
            syncAutEdge__8 := 1;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__8 := 2;
        ELSE
            isFeasible := FALSE;
        END_IF;
        IF isFeasible THEN
            IF hw_lamp = someConstantvariable THEN
                syncAutEdge__9 := 1;
            ELSE
                isFeasible := FALSE;
            END_IF;
        END_IF;
        IF isFeasible THEN
            isProgress := TRUE;
            IF syncAutEdge__8 = 1 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__8 = 2 THEN
                sup := someConstantvariable;
            END_IF;
            IF syncAutEdge__9 = 1 THEN
                hw_lamp_bit := TRUE;
                hw_lamp := someConstantvariable;
            END_IF;
        END_IF;
        (* Try to perform event "lamp.off". *)
        isFeasible := TRUE;
        IF sup = someConstantvariable THEN
            syncAutEdge__10 := 1;
        ELSIF sup = someConstantvariable THEN
            syncAutEdge__10 := 2;
        ELSE
            isFeasible := FALSE;
        END_IF;
        IF isFeasible THEN
            IF hw_lamp = someConstantvariable THEN
                syncAutEdge__11 := 1;
            ELSE
                isFeasible := FALSE;
            END_IF;
        END_IF;
        IF isFeasible THEN
            isProgress := TRUE;
            IF syncAutEdge__10 = 1 THEN
                sup := someConstantvariable;
            ELSIF syncAutEdge__10 = 2 THEN
                sup := someConstantvariable;
            END_IF;
            IF syncAutEdge__11 = 1 THEN
                hw_lamp_bit := FALSE;
                hw_lamp := someConstantvariable;
            END_IF;
        END_IF;
    END_WHILE;
END_ORGANIZATION_BLOCK
