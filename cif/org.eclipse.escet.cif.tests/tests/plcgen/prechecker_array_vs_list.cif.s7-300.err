WARNING: File "plcgen/prechecker_array_vs_list.cif": Semantic warning at line 21, column 5: The type "list[0] int" of algebraic variable "empty_list" allows only one value. Consider whether the type is correct, or use a constant instead of the algebraic variable.
WARNING: The input specification has no controller properties annotation that specifies the bounded response property.
WARNING: The input specification has no controller properties annotation that specifies the confluence property.
WARNING: The input specification has no controller properties annotation that specifies the non-blocking under control property.
WARNING: Before generating PLC code, the bounded response, confluence and non-blocking under control properties of the CIF specification should be checked and should hold.
WARNING: Please apply the CIF controller properties checker on the CIF specification before generating PLC code from it.
WARNING: Using control code generated from a CIF specification without bounded response, confluence or non-blocking under control properties may result in undesired or unexpected behavior of the controlled system.
WARNING: Bounded response limit for uncontrollable events is not available, falling back to limitless trying of events until blocked.
WARNING: Bounded response limit for controllable events is not available, falling back to limitless trying of events until blocked.
WARNING: Maximum real type size supported by the PLC is less than the CIF real type size. Some values in the program may be truncated.
WARNING: I/O table file "plcgen/prechecker_array_vs_list.csv" not found. The PLC code will not perform any I/O with the environment.
ERROR: CIF PLC code generator failed due to unsatisfied preconditions:

  --------------------------
  (1/2) A list type is used.
  --------------------------
   * In algebraic variable "a":
     - alg list[2] int a = [1, 2];
           ^               ^
   * In algebraic variable "empty_list":
     - alg list[0] int empty_list = <list[0] int>[];
           ^                         ^           ^
   * In algebraic variable "l":
     - alg list int l = [1, 2];
           ^            ^

  ---------------------------------------------------------------------------------
  (2/2) Array type of an algebraic variable allows arrays with less than 1 element.
  ---------------------------------------------------------------------------------
   * In algebraic variable "empty_list":
     - alg list[0] int empty_list = <list[0] int>[];
           ^
