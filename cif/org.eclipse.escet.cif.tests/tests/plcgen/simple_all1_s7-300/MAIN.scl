ORGANIZATION_BLOCK MAIN
{ S7_Optimized_Access := 'false' }
    VAR_TEMP
        curValue: REAL;
        current_p: DINT;
        current_p_b: BOOL;
        current_p_j: DINT;
        current_p_r: REAL;
        current_p_tv: TupleStruct__2;
        current_p_v3: TupleStruct__1;
        current_p_ve: DINT;
        current_p_x: DINT;
        eventEnabled: BOOL;
        isProgress: BOOL;
        litStruct: TupleStruct;
        litStruct__1: TupleStruct__1;
        litStruct__2: TupleStruct__2;
        rightValue: TupleStruct__2;
        syncAutEdge: DINT;
        timeOut: BOOL;
    END_VAR

BEGIN
    (* --- Initialize state or update continuous variables. -------------------- *)
    IF firstRun THEN
        firstRun := FALSE;

        (* Initialize the state variables. *)
        "DB".p_b := TRUE;
        "DB".p_x := 0;
        "DB".p_y := 1.23;
        "DB".p_ve := 0;
        "DB".p_v1 := 0;
        litStruct.field1 := 0.0;
        litStruct.field2 := 0.0;
        "DB".p_v2 := litStruct;
        litStruct.field1 := 0.0;
        litStruct.field2 := 0.0;
        litStruct__1.field1 := litStruct;
        litStruct__1.field2 := 0.0;
        "DB".p_v3 := litStruct__1;
        litStruct__2.field1 := 0;
        litStruct__2.field2 := 0;
        "DB".p_tv := litStruct__2;
        "DB".p_j := 0;
        "DB".p_r := 1000000.0;
        "DB".p_t := 0.0;
        (* Reset timer of "p_t". *)
        "DB".preset_p_t := "DB".p_t;
        ton_p_t(IN := FALSE, PT := "DB".preset_p_t);
        ton_p_t(IN := TRUE, PT := "DB".preset_p_t);
        "DB".p := 0;
    ELSE
        (* Update remaining time of "p_t". *)
        ton_p_t(IN := TRUE, PT := "DB".preset_p_t, Q => timeOut, ET => curValue);
        "DB".p_t := SEL(timeOut, "DB".preset_p_t - curValue, 0.0);
    END_IF;

    (* --- Process all events. ------------------------------------------------- *)
    isProgress := TRUE;
    (* Perform events until none can be done anymore. *)
    WHILE isProgress DO
        isProgress := FALSE;

        (* Try to perform event "p.evt". *)
        eventEnabled := TRUE;
        IF "DB".p = 0 THEN
            syncAutEdge := 1;
        ELSIF "DB".p = 1 THEN
            syncAutEdge := 2;
        ELSIF "DB".p = 2 THEN
            syncAutEdge := 3;
        ELSIF "DB".p = 3 THEN
            syncAutEdge := 4;
        ELSIF "DB".p = 4 THEN
            syncAutEdge := 5;
        ELSIF "DB".p = 5 THEN
            syncAutEdge := 6;
        ELSIF "DB".p = 6 THEN
            syncAutEdge := 7;
        ELSIF "DB".p = 7 THEN
            syncAutEdge := 8;
        ELSIF "DB".p = 8 THEN
            syncAutEdge := 9;
        ELSIF "DB".p = 9 THEN
            syncAutEdge := 10;
        ELSIF "DB".p = 10 THEN
            syncAutEdge := 11;
        ELSE
            eventEnabled := FALSE;
        END_IF;
        IF eventEnabled THEN
            isProgress := TRUE;
            current_p := "DB".p;
            current_p_b := "DB".p_b;
            current_p_j := "DB".p_j;
            current_p_r := "DB".p_r;
            current_p_tv := "DB".p_tv;
            current_p_v3 := "DB".p_v3;
            current_p_ve := "DB".p_ve;
            current_p_x := "DB".p_x;
            IF syncAutEdge = 1 THEN
                litStruct__2.field1 := 1;
                litStruct__2.field2 := 2;
                "DB".p_tv := litStruct__2;
                "DB".p := 1;
            ELSIF syncAutEdge = 2 THEN
                "DB".p_x := 3;
                "DB".p_j := 4;
                "DB".p := 2;
            ELSIF syncAutEdge = 3 THEN
                rightValue := current_p_tv;
                "DB".p_x := rightValue.field1;
                "DB".p_j := rightValue.field2;
                "DB".p := 3;
            ELSIF syncAutEdge = 4 THEN
                "DB".p_tv.field1 := 5;
                "DB".p := 4;
            ELSIF syncAutEdge = 5 THEN
                "DB".p_tv.field2 := 6;
                "DB".p_j := 7;
                "DB".p := 5;
            ELSIF syncAutEdge = 6 THEN
                "DB".p_v3.field1.field2 := 7.8;
                "DB".p := 6;
            ELSIF syncAutEdge = 7 THEN
                litStruct.field1 := 1.2;
                litStruct.field2 := 3.4;
                litStruct__1.field1 := litStruct;
                litStruct__1.field2 := 5.6;
                "DB".p_v3 := litStruct__1;
                "DB".p := 7;
            ELSIF syncAutEdge = 8 THEN
                "DB".p_j := current_p_j + 1;
                "DB".p := 8;
            ELSIF syncAutEdge = 9 THEN
                "DB".p_b := FALSE;
                "DB".p := 9;
            ELSIF syncAutEdge = 10 THEN
                IF NOT current_p_b THEN
                    "DB".p_ve := 1;
                END_IF;
                "DB".p := 10;
            ELSIF syncAutEdge = 11 THEN
                "DB".p_r := DINT_TO_REAL("DB".g_inp) + 10.0;
                "DB".p := 11;
            END_IF;
        END_IF;
    END_WHILE;
END_ORGANIZATION_BLOCK
