<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://www.plcopen.org/xml/tc6_0201">
  <fileHeader companyName="Eclipse Foundation" creationDateTime="1970-01-01T01:00:00" productName="CIF to Structured Text" productVersion="0.0"/>
  <contentHeader name="Untitled1">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1"/>
      </fbd>
      <ld>
        <scaling x="1" y="1"/>
      </ld>
      <sfc>
        <scaling x="1" y="1"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="STATE">
        <baseType>
          <struct>
            <variable name="curTime">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable address="%Q*" name="dvar_M_aut_i">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable address="%Q*" name="dvar_M_aut_j">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable address="%Q*" name="dvar_M_aut_l">
              <type>
                <array>
                  <dimension lower="0" upper="4"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable address="%Q*" name="dvar_M_aut_ll">
              <type>
                <array>
                  <dimension lower="0" upper="1"/>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="4"/>
                      <baseType>
                        <DINT/>
                      </baseType>
                    </array>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable address="%Q*" name="dvar_M_aut_empty_arr">
              <type>
                <array>
                  <dimension lower="0" upper="0"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable address="%Q*" name="dvar_M_aut">
              <type>
                <derived name="enum_E"/>
              </type>
            </variable>
          </struct>
        </baseType>
      </dataType>
      <dataType name="enum_E">
        <baseType>
          <enum>
            <values>
              <value name="elit_l1"/>
              <value name="elit_l2"/>
              <value name="elit_l3"/>
              <value name="elit_l4"/>
              <value name="elit_l5"/>
              <value name="elit_l6"/>
              <value name="elit_l7"/>
              <value name="elit_l8"/>
            </values>
          </enum>
        </baseType>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="func_pf" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="farg_pf_x">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">func_pf := projArray0(makeArray0(1, 2, 3, 4, 5), farg_pf_x);
RETURN;</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="makeArray0" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="0" upper="4"/>
              <baseType>
                <DINT/>
              </baseType>
            </array>
          </returnType>
          <inputVars>
            <variable name="elem0">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="elem1">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="elem2">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="elem3">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="elem4">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="rslt">
              <type>
                <array>
                  <dimension lower="0" upper="4"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">rslt[0] := elem0;
rslt[1] := elem1;
rslt[2] := elem2;
rslt[3] := elem3;
rslt[4] := elem4;
makeArray0 := rslt;</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="projArray0" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="arr">
              <type>
                <array>
                  <dimension lower="0" upper="4"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="idx">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">projArray0 := arr[normProjIdx(idx, 5)];</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="normProjIdx" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="idx">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="size">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="tmp">
              <type>
                <DINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">tmp := idx;
IF tmp &lt; 0 THEN
    tmp := size + tmp;
END_IF;
normProjIdx := tmp;</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="func_lf" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="0" upper="4"/>
              <baseType>
                <DINT/>
              </baseType>
            </array>
          </returnType>
          <inputVars>
            <variable name="farg_lf_l">
              <type>
                <array>
                  <dimension lower="0" upper="4"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="farg_lf_x">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="fvar_lf_r">
              <type>
                <array>
                  <dimension lower="0" upper="4"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Initialize local variables.
fvar_lf_r := farg_lf_l;

// Actual function body.
fvar_lf_r[normProjIdx(farg_lf_x, 5)] := 6;
func_lf := fvar_lf_r;
RETURN;</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="func_llf" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="0" upper="1"/>
              <baseType>
                <array>
                  <dimension lower="0" upper="4"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </baseType>
            </array>
          </returnType>
          <inputVars>
            <variable name="farg_llf_x">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="farg_llf_y">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="fvar_llf_r">
              <type>
                <array>
                  <dimension lower="0" upper="1"/>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="4"/>
                      <baseType>
                        <DINT/>
                      </baseType>
                    </array>
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">// Initialize local variables.
fvar_llf_r := makeArray1(makeArray0(1, 2, 3, 4, 5), makeArray0(1, 2, 3, 4, 5));

// Actual function body.
fvar_llf_r[normProjIdx(0, 2)][normProjIdx(farg_llf_x, 5)] := farg_llf_y;
func_llf := fvar_llf_r;
RETURN;</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="makeArray1" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="0" upper="1"/>
              <baseType>
                <array>
                  <dimension lower="0" upper="4"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </baseType>
            </array>
          </returnType>
          <inputVars>
            <variable name="elem0">
              <type>
                <array>
                  <dimension lower="0" upper="4"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="elem1">
              <type>
                <array>
                  <dimension lower="0" upper="4"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="rslt">
              <type>
                <array>
                  <dimension lower="0" upper="1"/>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="4"/>
                      <baseType>
                        <DINT/>
                      </baseType>
                    </array>
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">rslt[0] := elem0;
rslt[1] := elem1;
makeArray1 := rslt;</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="MAIN" pouType="program">
        <interface>
          <outputVars>
            <variable name="timerValue0">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="timerValue1">
              <type>
                <TIME/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="cnt">
              <type>
                <LINT/>
              </type>
            </variable>
            <variable name="first">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="curTimerValue">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="state0">
              <type>
                <derived name="STATE"/>
              </type>
            </variable>
            <variable name="curTime">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="loopsKilled">
              <type>
                <LINT/>
              </type>
            </variable>
          </localVars>
          <tempVars>
            <variable name="lastTimerValue">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="curDeltaTime">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="curDeltaSecs">
              <type>
                <LREAL/>
              </type>
            </variable>
            <variable name="state1">
              <type>
                <derived name="STATE"/>
              </type>
            </variable>
            <variable name="progress">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="loopCount">
              <type>
                <INT/>
              </type>
            </variable>
          </tempVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// Handle 'time' and cycle time.
cnt := cnt + 1;

timer0(IN := curTimer = 0, PT := T#1D);
timer1(IN := curTimer = 1, PT := T#1D);
timerValue0 := timer0.ET;
timerValue1 := timer1.ET;

lastTimerValue := curTimerValue;
IF curTimer = 0 THEN
    curTimerValue := timerValue0;
ELSE
    curTimerValue := timerValue1;
END_IF;
curDeltaTime := curTimerValue - lastTimerValue;
curDeltaSecs := TIME_TO_LREAL(curDeltaTime) / 1000;
curTime := curTime + curDeltaSecs;

IF cnt MOD 10 = 0 THEN
    curTimer := 1 - curTimer;
    curTimerValue := T#0S;
    timer0(IN := curTimer = 0, PT := T#1D);
    timer1(IN := curTimer = 1, PT := T#1D);
    timerValue0 := timer0.ET;
    timerValue1 := timer1.ET;
END_IF;

IF first THEN
    first := FALSE;

    // Initialize state variables for initial state.
    state0.dvar_M_aut_i := 0;
    state0.dvar_M_aut_j := 1;
    state0.dvar_M_aut_l := makeArray0(1, 2, 3, 4, 5);
    state0.dvar_M_aut_ll := makeArray1(makeArray0(1, 2, 3, 4, 5), makeArray0(1, 2, 3, 4, 5));
    state0.dvar_M_aut_empty_arr := makeArray2();
    state0.dvar_M_aut := elit_l1;
ELSE
    // Update continuous variables for time delay.

    state0.curTime := curTime;
END_IF;

// Event loop.
WHILE TRUE DO
    progress := FALSE;

    // Event "tau".
    IF NOT progress THEN
        IF (state0.dvar_M_aut) = (elit_l1) THEN
            progress := TRUE;
            state1 := state0;

            state1.dvar_M_aut_i := state0.dvar_M_aut_l[normProjIdx(0, 5)];
            state1.dvar_M_aut_j := state0.dvar_M_aut_l[normProjIdx(-1, 5)];
            state1.dvar_M_aut := elit_l2;

            state0 := state1;
        END_IF;
    END_IF;

    // Event "tau".
    IF NOT progress THEN
        IF (state0.dvar_M_aut) = (elit_l2) THEN
            progress := TRUE;
            state1 := state0;

            state1.dvar_M_aut_l[normProjIdx(0, 5)] := 7;
            state1.dvar_M_aut_l[normProjIdx(-1, 5)] := 8;
            state1.dvar_M_aut := elit_l3;

            state0 := state1;
        END_IF;
    END_IF;

    // Event "tau".
    IF NOT progress THEN
        IF (state0.dvar_M_aut) = (elit_l3) THEN
            progress := TRUE;
            state1 := state0;

            state1.dvar_M_aut_ll[normProjIdx(-2, 2)] := func_lf(makeArray0(11, 22, 33, 44, 55), -1);
            state1.dvar_M_aut := elit_l4;

            state0 := state1;
        END_IF;
    END_IF;

    // Event "tau".
    IF NOT progress THEN
        IF (state0.dvar_M_aut) = (elit_l4) THEN
            progress := TRUE;
            state1 := state0;

            state1.dvar_M_aut_ll := func_llf(-1, 9);
            state1.dvar_M_aut := elit_l5;

            state0 := state1;
        END_IF;
    END_IF;

    // Event "tau".
    IF NOT progress THEN
        IF (state0.dvar_M_aut) = (elit_l5) THEN
            progress := TRUE;
            state1 := state0;

            state1.dvar_M_aut_ll[normProjIdx(0, 2)] := projArray1(func_llf(3, 123), 0);
            state1.dvar_M_aut := elit_l6;

            state0 := state1;
        END_IF;
    END_IF;

    // Event "tau".
    IF NOT progress THEN
        IF (state0.dvar_M_aut) = (elit_l6) THEN
            progress := TRUE;
            state1 := state0;

            state1.dvar_M_aut_i := projArray0(state0.dvar_M_aut_ll[normProjIdx(1, 2)], 2);
            state1.dvar_M_aut := elit_l7;

            state0 := state1;
        END_IF;
    END_IF;

    // Event "tau".
    IF NOT progress THEN
        IF (state0.dvar_M_aut) = (elit_l7) THEN
            progress := TRUE;
            state1 := state0;

            state1.dvar_M_aut_empty_arr := makeArray2();
            state1.dvar_M_aut := elit_l8;

            state0 := state1;
        END_IF;
    END_IF;

    // Done with events?
    IF NOT progress THEN
        EXIT;
    END_IF;

    // Protect against events that are always enabled.
    loopCount := loopCount + 1;
    IF loopCount &gt;= 100 THEN
        loopsKilled := loopsKilled + 1;
        EXIT;
    END_IF;
END_WHILE;</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="makeArray2" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="0" upper="0"/>
              <baseType>
                <DINT/>
              </baseType>
            </array>
          </returnType>
          <inputVars>
            <variable name="elem0">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="rslt">
              <type>
                <array>
                  <dimension lower="0" upper="0"/>
                  <baseType>
                    <DINT/>
                  </baseType>
                </array>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">rslt[0] := elem0;
makeArray2 := rslt;</xhtml>
          </ST>
        </body>
      </pou>
      <pou name="projArray1" pouType="function">
        <interface>
          <returnType>
            <array>
              <dimension lower="0" upper="4"/>
              <baseType>
                <DINT/>
              </baseType>
            </array>
          </returnType>
          <inputVars>
            <variable name="arr">
              <type>
                <array>
                  <dimension lower="0" upper="1"/>
                  <baseType>
                    <array>
                      <dimension lower="0" upper="4"/>
                      <baseType>
                        <DINT/>
                      </baseType>
                    </array>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="idx">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">projArray1 := arr[normProjIdx(idx, 2)];</xhtml>
          </ST>
        </body>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Untitled1">
        <resource name="Untitled1">
          <task interval="t#10ms" name="PlcTask" priority="20">
            <pouInstance name="MAIN" typeName="MAIN"/>
          </task>
          <globalVars constant="false" name="INPUTS">
            <variable address="%I*" name="ivar_i">
              <type>
                <DINT/>
              </type>
            </variable>
          </globalVars>
          <globalVars constant="false" name="TIMERS">
            <variable name="timer0">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="timer1">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="curTimer">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
          </globalVars>
        </resource>
      </configuration>
    </configurations>
  </instances>
</project>
