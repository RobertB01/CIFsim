Reading CIF file "datasynth/evts.cif".
Preprocessing CIF specification (includes checking that the specification is supported).
Converting CIF specification to internal format (BDDs):
    The specification has no BDD variables.

Starting data-based synthesis.

Showing input and checking for potential problems:
    Invariant (components state plant inv):      true
    Invariant (locations state plant invariant): true
    Invariant (system state plant invariant):    true

    Invariant (components state req invariant):  true
    Invariant (locations state req invariant):   true
    Invariant (system state req invariant):      true

    Initial   (discrete variables):              true
    Initial   (components init predicate):       true
    Initial   (aut/locs init predicate):         true
    Initial   (aut/locs init predicate):         true
    Initial   (auts/locs init predicate):        true
    Initial   (uncontrolled system):             true
    Initial   (system, combined init/plant inv): true
    Initial   (system, combined init/state inv): true

    Marked    (components marker predicate):     true
    Marked    (aut/locs marker predicate):       true
    Marked    (aut/locs marker predicate):       true
    Marked    (auts/locs marker predicate):      true
    Marked    (uncontrolled system):             true
    Marked    (system, combined mark/plant inv): true
    Marked    (system, combined mark/state inv): true

    State/event exclusion plants:
        None

    State/event exclusion requirements:
        Event "caa" needs:
            false
        Event "cae" needs:
            true
        Event "cea" needs:
            false
        Event "cee" needs:
            true
        Event "uaa" needs:
            false
        Event "uae" needs:
            true
        Event "uea" needs:
            false
        Event "uee" needs:
            true

    Uncontrolled system:
        State: (controlled-behavior: ?)
            Edge: (event: cen) (guard: true)
            Edge: (event: cea) (guard: true)
            Edge: (event: cee) (guard: true)
            Edge: (event: uen) (guard: true)
            Edge: (event: uea) (guard: true)
            Edge: (event: uee) (guard: true)

Restricting uncontrolled system behavior using state/event exclusion plant invariants.

Initialized controlled-behavior predicate: true.
Initialized controlled-initialization predicate: true.

Restricting behavior using state requirements.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: cea) (guard: true): guard: true -> false [state/event exclusion requirement: false].
Controlled behavior: true -> false [state/event exclusion requirement: false, edge: (event: uea) (guard: true)].

Restricted behavior using state/event exclusion requirements:
    State: (controlled-behavior: false)
        Edge: (event: cen) (guard: true)
        Edge: (event: cea) (guard: true -> false)
        Edge: (event: cee) (guard: true)
        Edge: (event: uen) (guard: true)
        Edge: (event: uea) (guard: true)
        Edge: (event: uee) (guard: true)

Restricting behavior using implicit runtime error requirements.

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: true [marker predicate]
Backward controlled-behavior: true -> false [restricted to current/previous controlled-behavior predicate: false]
Backward reachability: iteration 1.
Backward controlled-behavior: false [fixed point].

Round 1: finished, all states are bad.

Computing controlled system guards.

Edge (event: cen) (guard: true): guard: true -> false.
Edge (event: cee) (guard: true): guard: true -> false.

Final synthesis result:
    State: (controlled-behavior: false)
        Edge: (event: cen) (guard: true -> false)
        Edge: (event: cea) (guard: true -> false)
        Edge: (event: cee) (guard: true -> false)
        Edge: (event: uen) (guard: true)
        Edge: (event: uea) (guard: true)
        Edge: (event: uee) (guard: true)

Controlled system: exactly 0 states.

Initial (synthesis result):            false
Initial (uncontrolled system):         true
Initial (controlled system):           false
Initial (removed by supervisor):       true
Initial (added by supervisor):         false
