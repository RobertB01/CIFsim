controllable p_a;
uncontrollable p_b;
controllable q_a;
controllable q_b;
plant automaton p:
  disc int[0..5] x in any;
  location loc1:
    initial;
    marked;
    edge p_a when x >= 3 goto loc2;
  location loc2:
    marked;
    edge p_b goto loc3;
  location loc3;
end
plant automaton q:
  location loc1:
    initial;
    marked;
    edge q_a goto loc2;
    edge q_b goto loc2;
  location loc2:
    edge q_a goto loc3;
  location loc3:
    edge q_b goto loc4;
  location loc4:
    edge q_a goto loc1;
    edge q_b goto loc5;
  location loc5:
    edge q_a goto loc6;
  location loc6:
    edge q_b goto loc7;
  location loc7;
end
supervisor automaton sup:
  alphabet p_a, q_a, q_b;
  location:
    initial;
    marked;
    edge p_a when false;
    edge q_a when p.loc1 and (not(p.x = 2 or p.x = 3) and q.loc1) or p.loc1 and (not(p.x = 2 or p.x = 3) and (q.loc2 or q.loc4)) or (p.loc1 and ((p.x = 2 or p.x = 3) and q.loc1) or p.loc1 and ((p.x = 2 or p.x = 3) and (q.loc2 or q.loc4)));
    edge q_b when p.loc1 and (not(p.x = 2 or p.x = 3) and (q.loc1 or q.loc3)) or p.loc1 and ((p.x = 2 or p.x = 3) and (q.loc1 or q.loc3));
end
