Reading CIF file "datasynth/input_vars2.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind            Type  Name       Group  BDD vars  CIF values  BDD values  Values used
  -----  --------------  ----  ---------  -----  --------  ----------  ----------  -----------
  1      input variable  bool  io.sensor  0      1 * 2     2 * 2       2 * 2       100%
  -----  --------------  ----  ---------  -----  --------  ----------  ----------  -----------
  Total                                   1      2         4           4           100%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    true
Initial   (uncontrolled system):         true
Initial   (system, combined init/inv):   true

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  true
Marked    (uncontrolled system):         true
Marked    (system, combined marked/inv): true

State/event exclusion requirements:
  None

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: io.sensor) (guard: true) (assignments: io.sensor+ != io.sensor)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: true [marker predicate]
Backward reachability: iteration 1.

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: true [initialization predicate]
Forward reachability: iteration 1.

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: io.sensor) (guard: true) (assignments: io.sensor+ != io.sensor)

Controlled system:                     exactly 2 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         true
Initial (controlled system):           true
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Constructing output CIF specification.
Writing output CIF file "datasynth/input_vars2.ctrlsys.real.cif".
