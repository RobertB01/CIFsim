plant automaton p:
  controllable ed1;
  controllable ed2;
  controllable ed3;
  controllable ed4;
  controllable ed5;
  disc int[0..4] d1 in any;
  disc int[0..4] d2 in any;
  disc int[0..4] d3 in any;
  disc int[0..4] d4 in any;
  disc int[0..4] d5 in any;
  location loc1:
    initial;
    edge ed1 do d1 := d1 div 1 goto loc2;
    edge ed2 do d2 := d2 div 2 goto loc2;
    edge ed3 do d3 := d3 div 3 goto loc2;
    edge ed4 do d4 := d4 div 4 goto loc2;
    edge ed5 do d5 := d5 div 5 goto loc2;
  location loc2:
    marked d1 = 1;
    marked d2 = 1;
    marked d3 = 1;
    marked d4 = 1;
    marked d5 = 1;
end
supervisor automaton sup:
  alphabet p.ed1, p.ed2, p.ed3, p.ed4, p.ed5;
  initial p.d1 = 1 and p.d2 = 2 and (p.d3 = 1 and (p.d4 = 1 and p.d5 = 1)) or (p.d1 = 1 and p.d2 = 1 and (p.d3 = 4 and (p.d4 = 1 and p.d5 = 1)) or p.d1 = 1 and p.d2 = 1 and (p.d3 = 1 and (p.d4 = 4 and p.d5 = 1))) or (p.d1 = 1 and p.d2 = 1 and (p.d3 = 1 and (p.d4 = 1 and p.d5 = 1)) or (p.d1 = 1 and p.d2 = 1 and (p.d3 = 3 and (p.d4 = 1 and p.d5 = 1)) or p.d1 = 1 and p.d2 = 3 and (p.d3 = 1 and (p.d4 = 1 and p.d5 = 1))));
  location:
    initial;
    marked;
    edge p.ed1 when p.d1 = 1 and p.d2 = 1 and (p.d3 = 1 and (p.d4 = 1 and p.d5 = 1));
    edge p.ed2 when p.d1 = 1 and (p.d2 = 2 or p.d2 = 3) and (p.d3 = 1 and (p.d4 = 1 and p.d5 = 1));
    edge p.ed3 when p.d1 = 1 and p.d2 = 1 and (p.d3 = 4 and (p.d4 = 1 and p.d5 = 1)) or p.d1 = 1 and p.d2 = 1 and (p.d3 = 3 and (p.d4 = 1 and p.d5 = 1));
    edge p.ed4 when p.d1 = 1 and p.d2 = 1 and (p.d3 = 1 and (p.d4 = 4 and p.d5 = 1));
    edge p.ed5 when false;
end
