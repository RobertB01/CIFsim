controllable c_a;
controllable c_b;
controllable c_c;
controllable c_d;
plant automaton p:
  disc int[0..5] x in any;
  location:
    initial;
    marked;
    edge c_a do x := x + 1;
    edge c_b when x = 3 or x = 5;
    edge c_c when x >= 2;
    edge c_d when x >= 3;
end
supervisor automaton sup:
  alphabet c_a, c_b, c_c, c_d;
  location:
    initial;
    marked;
    edge c_a when p.x != 5;
    edge c_b when p.x = 1 or (p.x = 3 or p.x = 5);
    edge c_c when 2 <= p.x and p.x <= 5;
    edge c_d when not(p.x = 2 or p.x = 3);
end
plant invariant plantInv1: c_b needs p.x >= 3;
plant invariant plantInv2: p.x = 1 disables c_c;
plant invariant plantInv3: c_d needs p.x >= 4;
