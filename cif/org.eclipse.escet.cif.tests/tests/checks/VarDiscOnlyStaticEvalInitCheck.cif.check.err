WARNING: File "checks/VarDiscOnlyStaticEvalInitCheck.cif": Semantic warning at line 17, column 13: Discrete variable "A.v3" is not used anywhere in the specification.
WARNING: File "checks/VarDiscOnlyStaticEvalInitCheck.cif": Semantic warning at line 18, column 13: Discrete variable "A.v4" is not used anywhere in the specification.
WARNING: File "checks/VarDiscOnlyStaticEvalInitCheck.cif": Semantic warning at line 19, column 13: Discrete variable "A.v5" is not used anywhere in the specification.
WARNING: File "checks/VarDiscOnlyStaticEvalInitCheck.cif": Semantic warning at line 20, column 13: Discrete variable "A.v6" is not used anywhere in the specification.
WARNING: File "checks/VarDiscOnlyStaticEvalInitCheck.cif": Semantic warning at line 21, column 13: Discrete variable "A.v7" is not used anywhere in the specification.
ERROR: CIF checks tester failed due to unsatisfied preconditions:
  ---------------------------------------------------------------------------------
  (1/2) Discrete variable has an initial value that cannot be evaluated statically.
  ---------------------------------------------------------------------------------
   * In discrete variable "A.v4":
     - disc bool v4 = v1 = v2;
                         ^
   * In discrete variable "A.v5":
     - disc bool v5 in {v1 = v2, v1 = v2};
                           ^        ^
  ----------------------------------------------------------------------------------------------------------------------------------
  (2/2) Discrete variable has an initial value that cannot be evaluated statically, as evaluating it results in an evaluation error.
  ----------------------------------------------------------------------------------------------------------------------------------
   * In discrete variable "A.v1":
     - disc real v1 = sqrt(-1.0);
                          ^
   * In discrete variable "A.v2":
     - disc real v2 in {sqrt(-1.0), sqrt(-1.0)};
                            ^           ^
   * In discrete variable "A.v3":
     - disc real v3 in {1.0, sqrt(-1.0), sqrt(-1.0), 2.0};
                                 ^           ^
