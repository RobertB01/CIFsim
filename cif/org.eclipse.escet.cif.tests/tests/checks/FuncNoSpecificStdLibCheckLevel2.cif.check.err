ERROR: CIF checks tester failed due to unsatisfied preconditions:

  ----------------------------------------------------------------------------------
  (1/18) Standard library function "abs" is used on a ranged integer typed argument.
  ----------------------------------------------------------------------------------
   * In invariant "ABS.G":
     - invariant G: abs(1) > 0;
                    ^

  -------------------------------------------------------------------------------------
  (2/18) Standard library function "abs" is used on a rangeless integer typed argument.
  -------------------------------------------------------------------------------------
   * In invariant "ABS.I":
     - invariant I: abs(i) > 0;
                    ^

  ----------------------------------------------------------------------------------
  (3/18) Standard library function "del" is used on a ranged integer typed argument.
  ----------------------------------------------------------------------------------
   * In invariant "DELETE.AG":
     - invariant AG: del([1, 2], 0)[0] > 0;
                     ^
   * In invariant "DELETE.LG":
     - invariant LG: del(li, 0)[0] > 0;
                     ^

  -------------------------------------------------------------------------------------
  (4/18) Standard library function "del" is used on a rangeless integer typed argument.
  -------------------------------------------------------------------------------------
   * In invariant "DELETE.AI":
     - invariant AI: del([1, 2], i)[0] > 0;
                     ^
   * In invariant "DELETE.LI":
     - invariant LI: del(li, i)[0] > 0;
                     ^

  -------------------------------------------------------------------------------
  (5/18) Standard library function "del" is used on an array list typed argument.
  -------------------------------------------------------------------------------
   * In invariant "DELETE.AG":
     - invariant AG: del([1, 2], 0)[0] > 0;
                     ^
   * In invariant "DELETE.AI":
     - invariant AI: del([1, 2], i)[0] > 0;
                     ^

  ---------------------------------------------------------------------------------
  (6/18) Standard library function "empty" is used on an array list typed argument.
  ---------------------------------------------------------------------------------
   * In invariant "EMPTY.ARRAY":
     - invariant ARRAY: empty([1, 2]);
                        ^

  ----------------------------------------------------------------------------------
  (7/18) Standard library function "max" is used on a ranged integer typed argument.
  ----------------------------------------------------------------------------------
   * In invariant "MAXIMUM.GG":
     - invariant GG: max(1, 1) > 0;
                     ^
   * In invariant "MAXIMUM.GI":
     - invariant GI: max(1, i) > 0;
                     ^
   * In invariant "MAXIMUM.GR":
     - invariant GR: max(1, 1.0) > 0;
                     ^
   * In invariant "MAXIMUM.IG":
     - invariant IG: max(i, 1) > 0;
                     ^
   * In invariant "MAXIMUM.RG":
     - invariant RG: max(1.0, 1) > 0;
                     ^

  -------------------------------------------------------------------------------------
  (8/18) Standard library function "max" is used on a rangeless integer typed argument.
  -------------------------------------------------------------------------------------
   * In invariant "MAXIMUM.GI":
     - invariant GI: max(1, i) > 0;
                     ^
   * In invariant "MAXIMUM.IG":
     - invariant IG: max(i, 1) > 0;
                     ^
   * In invariant "MAXIMUM.II":
     - invariant II: max(i, i) > 0;
                     ^

  ----------------------------------------------------------------------------------
  (9/18) Standard library function "min" is used on a ranged integer typed argument.
  ----------------------------------------------------------------------------------
   * In invariant "MINIMUM.GG":
     - invariant GG: min(1, 1) > 0;
                     ^
   * In invariant "MINIMUM.GI":
     - invariant GI: min(1, i) > 0;
                     ^
   * In invariant "MINIMUM.GR":
     - invariant GR: min(1, 1.0) > 0;
                     ^
   * In invariant "MINIMUM.IG":
     - invariant IG: min(i, 1) > 0;
                     ^
   * In invariant "MINIMUM.RG":
     - invariant RG: min(1.0, 1) > 0;
                     ^

  --------------------------------------------------------------------------------------
  (10/18) Standard library function "min" is used on a rangeless integer typed argument.
  --------------------------------------------------------------------------------------
   * In invariant "MINIMUM.GI":
     - invariant GI: min(1, i) > 0;
                     ^
   * In invariant "MINIMUM.IG":
     - invariant IG: min(i, 1) > 0;
                     ^
   * In invariant "MINIMUM.II":
     - invariant II: min(i, i) > 0;
                     ^

  -----------------------------------------------------------------------------------
  (11/18) Standard library function "pop" is used on a non-array list typed argument.
  -----------------------------------------------------------------------------------
   * In invariant "POP.L":
     - invariant L: pop(li)[0] > 0;
                    ^

  -----------------------------------------------------------------------------------
  (12/18) Standard library function "pow" is used on a ranged integer typed argument.
  -----------------------------------------------------------------------------------
   * In invariant "POWER.GG":
     - invariant GG: pow(1, 1) > 0;
                     ^
   * In invariant "POWER.GI":
     - invariant GI: pow(1, i) > 0;
                     ^
   * In invariant "POWER.GR":
     - invariant GR: pow(1, 1.0) > 0;
                     ^
   * In invariant "POWER.IG":
     - invariant IG: pow(i, 1) > 0;
                     ^
   * In invariant "POWER.RG":
     - invariant RG: pow(1.0, 1) > 0;
                     ^

  --------------------------------------------------------------------------------------
  (13/18) Standard library function "pow" is used on a rangeless integer typed argument.
  --------------------------------------------------------------------------------------
   * In invariant "POWER.GI":
     - invariant GI: pow(1, i) > 0;
                     ^
   * In invariant "POWER.IG":
     - invariant IG: pow(i, 1) > 0;
                     ^
   * In invariant "POWER.II":
     - invariant II: pow(i, i) > 0;
                     ^

  -------------------------------------------------------------------------------------
  (14/18) Standard library function "scale" is used on a ranged integer typed argument.
  -------------------------------------------------------------------------------------
   * In invariant "SCALE.G":
     - invariant G: scale(1, 1, 1, 1, 1) > 0;
                    ^
   * In invariant "SCALE.I1":
     - invariant I1: scale(i, 1, 1, 1, 1) > 0;
                     ^
   * In invariant "SCALE.I2":
     - invariant I2: scale(1, i, 1, 1, 1) > 0;
                     ^
   * In invariant "SCALE.I3":
     - invariant I3: scale(1, 1, i, 1, 1) > 0;
                     ^
   * In invariant "SCALE.I4":
     - invariant I4: scale(1, 1, 1, i, 1) > 0;
                     ^
   * In invariant "SCALE.I5":
     - invariant I5: scale(1, 1, 1, 1, i) > 0;
                     ^
   * In invariant "SCALE.R1":
     - invariant R1: scale(1.0, 1, 1, 1, 1) > 0;
                     ^
   * In invariant "SCALE.R2":
     - invariant R2: scale(1, 1.0, 1, 1, 1) > 0;
                     ^
   * In invariant "SCALE.R3":
     - invariant R3: scale(1, 1, 1.0, 1, 1) > 0;
                     ^
   * In invariant "SCALE.R4":
     - invariant R4: scale(1, 1, 1, 1.0, 1) > 0;
                     ^
   * In invariant "SCALE.R5":
     - invariant R5: scale(1, 1, 1, 1, 1.0) > 0;
                     ^

  ----------------------------------------------------------------------------------------
  (15/18) Standard library function "scale" is used on a rangeless integer typed argument.
  ----------------------------------------------------------------------------------------
   * In invariant "SCALE.I":
     - invariant I: scale(i, i, i, i, i) > 0;
                    ^
   * In invariant "SCALE.I1":
     - invariant I1: scale(i, 1, 1, 1, 1) > 0;
                     ^
   * In invariant "SCALE.I2":
     - invariant I2: scale(1, i, 1, 1, 1) > 0;
                     ^
   * In invariant "SCALE.I3":
     - invariant I3: scale(1, 1, i, 1, 1) > 0;
                     ^
   * In invariant "SCALE.I4":
     - invariant I4: scale(1, 1, 1, i, 1) > 0;
                     ^
   * In invariant "SCALE.I5":
     - invariant I5: scale(1, 1, 1, 1, i) > 0;
                     ^

  ------------------------------------------------------------------------------------
  (16/18) Standard library function "sign" is used on a ranged integer typed argument.
  ------------------------------------------------------------------------------------
   * In invariant "SIGN.G":
     - invariant G: sign(1) > 0;
                    ^

  ---------------------------------------------------------------------------------------
  (17/18) Standard library function "sign" is used on a rangeless integer typed argument.
  ---------------------------------------------------------------------------------------
   * In invariant "SIGN.I":
     - invariant I: sign(i) > 0;
                    ^

  ---------------------------------------------------------------------------------
  (18/18) Standard library function "size" is used on an array list typed argument.
  ---------------------------------------------------------------------------------
   * In invariant "SIZE.ARRAY":
     - invariant ARRAY: size([1, 2]) > 0;
                        ^
