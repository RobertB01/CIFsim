//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2022 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

group alg_param:
  group g:
    group def C():
      invariant true;
    end

    group def p(alg C a):
      invariant true;
    end
  end

  // ---

  gg: G(gg, gg, gg);

  group def G(alg G x; alg G y; alg G z):
    // ...
  end
end

group alg_var:
  group g:
    group def C():
      invariant true;
    end

    alg C a = true;
  end
end

group const_decl:
  group g:
    group def C():
      invariant true;
    end

    const C a = true;
  end
end

group disc_var:
  group g:
    group def C():
      invariant true;
    end

    plant p:
      disc C a;
      location:
        initial;
    end
  end
end

group event_param:
  group g:
    group def P(event P e):
    end
  end
end

group event_decl:
  group g:
    group def P():
    end

    event P e;
  end
end

group func_param:
  group g:
    func bool f(P x):
      return true;
    end

    group def P():
    end
  end
end

group func_var:
  // Since we can already not reference P in function f, the variable type check
  // is not really tested...
  group g:
    func bool f():
      P v;
      return true;
    end

    group def P():
    end
  end
end

group input_var:
  group g:
    group def C():
      invariant true;
    end

    input C i;
  end
end

group type_decl:
  group g:
    group def C():
      invariant true;
    end

    type a = C;
  end
end
