//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2024 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

event e;

func bool f1():
  int x1 = [1, 2, 3][3];
  int x2 = [1, 2, 3][4];

  int a;
  int[0..5] b;
  int[-3..3] c;
  int[3..4] d;

  int y1 = [1, 2, 3][a];
  int y2 = [1, 2, 3][b];
  int y3 = [1, 2, 3][c];
  int y4 = [1, 2, 3][d];

  return true;
end

func bool f2():
  list[3] int z;

  z[3] := 5;

  return true;
end

func bool f3():
  list[0..3] int z;

  z[3] := 5;

  return true;
end

automaton ok:
  disc list[2] int v;
  disc list[2..2] int w;

  location:
    initial;
    edge e do v[0] := 5;
    edge e do v[1] := 5;
    edge e do v[-1] := 5;
    edge e do v[-2] := 5;

    edge e do w[0] := 5;
    edge e do w[1] := 5;
    edge e do w[-1] := 5;
    edge e do w[-2] := 5;
end

automaton err_pos2:
  disc list[2] int v;
  location:
    initial;
    edge e do v[2] := 5;
end

automaton err_pos3:
  disc list[2..2] int v;
  location:
    initial;
    edge e do v[3] := 5;
end

automaton err_neg3:
  disc list[2..2] int v;
  location:
    initial;
    edge e do v[-3] := 5;
end

automaton err_neg4:
  disc list[2] int v;
  location:
    initial;
    edge e do v[-4] := 5;
end
