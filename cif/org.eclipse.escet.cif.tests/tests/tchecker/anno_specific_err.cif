//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, 2024 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

// Annotations on the specification.

@@cif:typechecker:tests:anno1

// Error: not exactly one argument.
@cif:typechecker:tests:anno1
input bool i1;

@cif:typechecker:tests:anno1(arg1: true, arg2: false)
input bool i2;

// Also check other types of annotated objects.

@cif:typechecker:tests:anno1
automaton a1:
  @cif:typechecker:tests:anno1
  location:
    initial;
end

automaton a2:
  @cif:typechecker:tests:anno1
  location loc1:
    initial;

  @cif:typechecker:tests:anno1
  location loc2:
    initial;
end

automaton a3:
  @cif:typechecker:tests:anno1
  disc int x = 1;
  invariant x > 0;

  @cif:typechecker:tests:anno1
  cont c = 1 der 2;
  invariant c > 0;

  @cif:typechecker:tests:anno1
  event evt;

  location:
    initial;
    edge evt;
end

automaton a4:
  @cif:typechecker:tests:anno1
  invariant true;

  location:
    initial;
    @@cif:typechecker:tests:anno1
    invariant false;
end

@cif:typechecker:tests:anno1
group g1:
  @cif:typechecker:tests:anno1
  alg int alg1 = a3.x;

  @cif:typechecker:tests:anno1
  const int const1 = 2;

  @cif:typechecker:tests:anno1
  type typeDecl1 = bool;

  @cif:typechecker:tests:anno1
  enum enumDecl1 = lit1, lit2;

  @cif:typechecker:tests:anno1
  enum enumDecl2 = @cif:typechecker:tests:anno1 lit3, lit4;

  @cif:typechecker:tests:anno1
  func bool func1(): "java:something";

  @cif:typechecker:tests:anno1
  func bool func2(
    @cif:typechecker:tests:anno1
    bool fparam1
  ):
    @cif:typechecker:tests:anno1
    bool fvar1;
    return fparam1 or fvar1;
  end
end
