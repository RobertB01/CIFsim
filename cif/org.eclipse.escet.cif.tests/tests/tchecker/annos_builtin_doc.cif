//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, 2024 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

// Annotations on the specification.

@@doc

// Missing argument.
@doc
input bool i1;

// Unsupported unnamed arguments.
@doc(a: "a", $text: "text", b: "b", "a", "b")
input bool i2;

// Not a string-typed argument.
@doc(false, 3)
input bool i3;

// Not a statically-evaluable argument.
@doc(fmt("%s", i4))
input bool i4;

// Argument evaluation error.
@doc(fmt("%s", sqrt(-1) > 0))
input bool i5;

// Valid.
@doc("some text")
input bool i6;

// Multiple times, multiple lines.
@doc("some text1")
@doc("some text2")
@doc("first line\nsecond line")
@doc("another first line", "another second line")
@doc(
  "yet another first line",
  "yet another second line",
)
input bool i7;

// Also check other types of annotated objects.

@doc
automaton a1:
  @doc
  location:
    initial;
end

automaton a2:
  @doc
  location loc1:
    initial;

  @doc
  location loc2:
    initial;
end

automaton a3:
  @doc
  disc int x = 1;
  invariant x > 0;

  @doc
  cont c = 1 der 2;
  invariant c > 0;

  @doc
  event evt;

  location:
    initial;
    edge evt;
end

group g1:
  @doc
  alg bool alg1 = false;

  @doc
  const bool const1 = true;

  @doc
  type typeDecl1 = bool;

  @doc
  enum enumDecl1 = lit1, lit2;

  @doc
  enum enumDecl2 = @doc lit3, lit4;

  @doc
  func bool func1(): "java:something";

  @doc
  func bool func2(
    @doc
    bool fparam1
  ):
    @doc
    bool fvar1;
    return fparam1 or fvar1;
  end
end
