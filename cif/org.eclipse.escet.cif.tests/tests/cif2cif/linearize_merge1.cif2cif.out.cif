event e12;
event e13;
event e14;
event e18;
event e19;
event e20;
event e20c;
event e21;
event e22;
event e23;
event e24;
event e26;
event e27a;
event e27b;
event f27;
event e28;
event e30;
event e31a;
event e31b;
event e34;
group p1:
  initial true and false;
  marked true and false;
end
group p2:
  initial true and true;
  marked true and false;
end
group p3:
  event e3;
  initial true and false;
  marked true and false;
end
group p4:
  event e4;
  initial true and true;
  marked true and false;
end
group p5:
  event e5;
  enum LPE = l1, l2;
  initial M.p5 = l1 and true or M.p5 = l2 and false;
  marked M.p5 = l1 and false or M.p5 = l2 and false;
end
group p6:
  event e6a;
  event e6b;
  enum LPE = l1, l2;
  initial M.p6 = l1 and true or M.p6 = l2 and true;
  marked M.p6 = l1 and false or M.p6 = l2 and false;
end
group p7:
  event e7;
  enum LPE = l1, l2;
  initial M.p7 = l1 and true or M.p7 = l2 and true;
  marked M.p7 = l1 and false or M.p7 = l2 and false;
end
group p8:
  event e8a;
  event e8b;
  initial true and true;
  marked true and false;
end
group p9:
  alg bool a = M.p9 = l2;
  event e9;
  enum LPE = l1, l2;
  initial M.p9 = l1 and true or M.p9 = l2 and false;
  marked M.p9 = l1 and false or M.p9 = l2 and false;
  invariant a or M.p9_b;
end
group p10:
  initial true and true;
  marked true and false;
end
group p11:
  enum LPE = l1, l2;
  initial M.p11 = l1 and true or M.p11 = l2 and false;
  marked M.p11 = l1 and false or M.p11 = l2 and false;
end
group p12a:
  initial true and true;
  marked true and false;
end
group p12b:
  enum LPE = l1, l2;
  initial M.p12b = l1 and true or M.p12b = l2 and false;
  marked M.p12b = l1 and false or M.p12b = l2 and false;
end
group p14a:
  initial true and true;
  marked true and false;
end
group p14b:
  enum LPE = l1, l2;
  initial M.p14b = l1 and true or M.p14b = l2 and false;
  marked M.p14b = l1 and false or M.p14b = l2 and false;
end
group p15a:
  event e15a;
  enum LPE = l1, l2, l3;
  initial M.p15a = l1 and true or (M.p15a = l2 and false or M.p15a = l3 and false);
  marked M.p15a = l1 and false or (M.p15a = l2 and false or M.p15a = l3 and false);
end
group p15b:
  event e15b;
  enum LPE = l1, l2, l3;
  initial M.p15b = l1 and true or (M.p15b = l2 and true or M.p15b = l3 and true);
  marked M.p15b = l1 and false or (M.p15b = l2 and false or M.p15b = l3 and false);
end
group p16:
  event e16;
  enum LPE = l1, l2;
  initial M.p16 = l1 and true or M.p16 = l2 and false;
  marked M.p16 = l1 and false or M.p16 = l2 and false;
end
group p17:
  initial true and true;
  marked true and false;
end
group p18a:
  initial true and true;
  marked true and false;
end
group p18b:
  initial true and true;
  marked true and false;
end
group p18c:
  initial true and true;
  marked true and false;
end
group p19a:
  enum LPE = l1, l2;
  initial M.p19a = l1 and true or M.p19a = l2 and false;
  marked M.p19a = l1 and false or M.p19a = l2 and false;
end
group p19b:
  initial true and true;
  marked true and false;
end
group p19c:
  initial true and true;
  marked true and false;
end
group p20a:
  enum LPE = l1, l2;
  initial M.p20a = l1 and true or M.p20a = l2 and false;
  marked M.p20a = l1 and false or M.p20a = l2 and false;
end
group p20b:
  initial true and true;
  marked true and false;
end
group send20c_1:
  initial true and true;
  marked true and false;
end
group send20c_2:
  enum LPE = l1, l2;
  initial M.send20c_2 = l1 and true or M.send20c_2 = l2 and false;
  marked M.send20c_2 = l1 and false or M.send20c_2 = l2 and false;
end
group recv20c_1:
  initial true and true;
  marked true and false;
end
group recv20c_2:
  enum LPE = l1, l2;
  initial M.recv20c_2 = l1 and true or M.recv20c_2 = l2 and false;
  marked M.recv20c_2 = l1 and false or M.recv20c_2 = l2 and false;
end
group sync20c_1:
  initial true and true;
  marked true and false;
end
group sync20c_2:
  enum LPE = l1, l2;
  initial M.sync20c_2 = l1 and true or M.sync20c_2 = l2 and false;
  marked M.sync20c_2 = l1 and false or M.sync20c_2 = l2 and false;
end
group p21a:
  enum LPE = l1, l2;
  initial M.p21a = l1 and true or M.p21a = l2 and false;
  marked M.p21a = l1 and false or M.p21a = l2 and false;
end
group p21b:
  initial true and true;
  marked true and false;
end
group p22a:
  enum LPE = l1, l2;
  initial M.p22a = l1 and true or M.p22a = l2 and false;
  marked M.p22a = l1 and false or M.p22a = l2 and false;
end
group p22b:
  initial true and true;
  marked true and false;
end
group p23a:
  initial true and true;
  marked true and false;
end
group p23b:
  enum LPE = l1, l2, l3;
  initial M.p23b = l1 and true or (M.p23b = l2 and true or M.p23b = l3 and true);
  marked M.p23b = l1 and false or (M.p23b = l2 and false or M.p23b = l3 and false);
end
group p24a:
  initial true and true;
  marked true and false;
end
group p24b:
  enum LPE = l1, l2, l3;
  initial M.p24b = l1 and true or (M.p24b = l2 and true or M.p24b = l3 and true);
  marked M.p24b = l1 and false or (M.p24b = l2 and false or M.p24b = l3 and false);
end
group p25:
  initial true and true;
  marked true and false;
end
group p26a:
  initial true and true;
  marked true and false;
end
group p26b:
  initial true and true;
  marked true and false;
end
group p27a:
  initial true and true;
  marked true and false;
end
group p27b:
  initial true and true;
  marked true and false;
end
group q27a:
  initial true and true;
  marked true and false;
end
group q27b:
  initial true and true;
  marked true and false;
end
group p28a:
  initial true and true;
  marked true and false;
end
group p28b:
  initial true and true;
  marked true and false;
end
group p30a:
  initial true and true;
  marked true and false;
end
group p30b:
  initial true and true;
  marked true and false;
end
group p31a:
  initial true and true;
  marked true and false;
end
group p31b:
  initial true and true;
  marked true and false;
end
group p32:
  enum LPE = l1, l2;
  initial M.p32 = l1 and true or M.p32 = l2 and true;
  marked M.p32 = l1 and false or M.p32 = l2 and false;
  invariant 32.3 = 32.3;
  invariant M.p32 = l1 => 32.1 = 32.1;
  invariant M.p32 = l2 => 32.2 = 32.2;
end
group p33:
  enum LPE = l1, l2, l3, l4;
  initial M.p33 = l1 and true or M.p33 = l2 and true or (M.p33 = l3 and true or M.p33 = l4 and true);
  marked 33.1 = 33.1,
         M.p33 = l1 and false or M.p33 = l2 and true or (M.p33 = l3 and 33.3 = 33.3 or M.p33 = l4 and 33.4 = 33.4);
end
group p34:
  enum LPE = l1, l2, l3, l4;
  initial 34.1 = 34.1,
          M.p34 = l1 and false or M.p34 = l2 and true or (M.p34 = l3 and 34.3 = 34.3 or M.p34 = l4 and 34.4 = 34.4);
  marked M.p34 = l1 and false or M.p34 = l2 and false or (M.p34 = l3 and false or M.p34 = l4 and false);
end
group p35:
  initial true and M.p36 = p36.l1;
  marked true and false;
end
group p36:
  enum LPE = l1, l2;
  initial M.p36 = l1 and true or M.p36 = l2 and true;
  marked M.p36 = l1 and false or M.p36 = l2 and false;
end
group p37:
  event e37;
  enum LPE = l1, l2;
  initial M.p37 = l1 and true or M.p37 = l2 and true;
  marked M.p37 = l1 and false or M.p37 = l2 and false;
end
group p38:
  event e38;
  enum LPE = l1, l2, l3, l4, l5, l6;
  initial M.p38 = l1 and true or (M.p38 = l2 and true or M.p38 = l3 and true) or (M.p38 = l4 and true or (M.p38 = l5 and true or M.p38 = l6 and true));
  marked M.p38 = l1 and false or (M.p38 = l2 and false or M.p38 = l3 and false) or (M.p38 = l4 and false or (M.p38 = l5 and false or M.p38 = l6 and false));
end
group p40:
  event e40;
  enum LPE = l1, l2;
  initial M.p40 = l1 and true or M.p40 = l2 and false;
  marked M.p40 = l1 and false or M.p40 = l2 and false;
end
group p41:
  event e41a;
  event e41b;
  initial true and true;
  marked true and false;
end
group annos:
  @doc("aut doc")
  enum LPE =
    @doc("first loc")
    loc1,
    @doc("second loc")
    loc2;
  initial M.annos = loc1 and true or M.annos = loc2 and false;
  marked M.annos = loc1 and false or M.annos = loc2 and false;
end
automaton M:
  alphabet e12, e14, e18, e19, e20, e20c, e21, e22, e23, e24, e26, e27a, e27b, e28, e30, e31a, e31b, e34, f27, .p15a.e15a, .p15b.e15b, .p16.e16, p3.e3, .p37.e37, .p38.e38, p4.e4, .p40.e40, p41.e41a, p41.e41b, .p5.e5, .p6.e6a, .p6.e6b, .p7.e7, p8.e8a, p8.e8b, .p9.e9;
  disc .annos.LPE annos = .annos.loc1;
  disc .p11.LPE p11 = .p11.l1;
  disc .p12b.LPE p12b = .p12b.l1;
  disc real p14a_v;
  disc real p14b_v;
  disc .p14b.LPE p14b = .p14b.l1;
  disc real p15a_v;
  disc .p15a.LPE p15a = .p15a.l1;
  disc real p15b_v;
  disc .p15b.LPE p15b in any;
  disc real p16_v;
  disc .p16.LPE p16 = .p16.l1;
  disc real p17_dv;
  cont p17_cv der 1.0;
  disc real p18b_v;
  disc .p19a.LPE p19a = .p19a.l1;
  disc real p19b_v;
  disc .p20a.LPE p20a = .p20a.l1;
  disc real p20b_v;
  disc .p21a.LPE p21a = .p21a.l1;
  disc .p22a.LPE p22a = .p22a.l1;
  disc real p22b_v1;
  disc real p22b_v2;
  disc real p23b_v1;
  disc real p23b_v2;
  disc .p23b.LPE p23b in any;
  disc real p24b_v1;
  disc .p24b.LPE p24b in any;
  disc real p25_v;
  disc tuple(int a; int b) p26b_v;
  disc list int p26b_l = [261, 262];
  disc tuple(tuple(real a; real b) c; real d) p27b_v1;
  disc list list int p27b_v2;
  cont p28b_v1 der 28.1;
  cont p28b_v2 der 28.2;
  disc .p32.LPE p32 in any;
  disc .p33.LPE p33 in any;
  disc .p34.LPE p34 in any;
  disc .p36.LPE p36 in any;
  disc .p37.LPE p37 in any;
  disc real p38_v;
  disc .p38.LPE p38 in any;
  disc real p40_v;
  disc .p40.LPE p40 = .p40.l1;
  disc int p41_a;
  disc func int() p41_b;
  disc .p5.LPE p5 = .p5.l1;
  disc .p6.LPE p6 in any;
  disc .p7.LPE p7 in any;
  disc bool p9_b = p9 = .p9.l1;
  disc .p9.LPE p9 = .p9.l1;
  disc tuple(real a; real b) q27b_v;
  disc int recv20c_1_a;
  disc int recv20c_2_b;
  disc .recv20c_2.LPE recv20c_2 = .recv20c_2.l1;
  disc int send20c_1_x;
  disc int send20c_2_y;
  disc .send20c_2.LPE send20c_2 = .send20c_2.l1;
  disc int sync20c_1_a;
  disc int sync20c_2_b;
  disc .sync20c_2.LPE sync20c_2 = .sync20c_2.l1;
  disc bool u = true;
  plant invariant u;
  location L:
    initial;
    marked;
    edge e12 when true and (true and (p12b = .p12b.l1 and (12.1 = 12.1 and 12.2 = 12.2 or 12.3 = 12.3) or p12b = .p12b.l2 and 12.4 = 12.4)) do if p12b = .p12b.l1 and (12.1 = 12.1 and 12.2 = 12.2): p12b := .p12b.l2 elif p12b = .p12b.l1 and 12.3 = 12.3: p12b := .p12b.l1 elif p12b = .p12b.l2 and 12.4 = 12.4: p12b := .p12b.l1 end;
    edge e14 when true and (true and (p14b = .p14b.l1 and (14.1 = 14.1 and 14.2 = 14.2 or 14.3 = 14.3) or p14b = .p14b.l2 and 14.4 = 14.4)) do p14a_v := 14.1, if p14b = .p14b.l1 and (14.1 = 14.1 and 14.2 = 14.2): p14b_v := 14.7, p14b := .p14b.l2 elif p14b = .p14b.l1 and 14.3 = 14.3: p14b_v := 14.8 elif p14b = .p14b.l2 and 14.4 = 14.4: p14b_v := 14.9, p14b := .p14b.l1 end;
    edge e18 when true and (true and true) and (true and (true and true)) do p18b_v := 18.1;
    edge e19 when (p19a = .p19a.l1 and true or p19a = .p19a.l2 and true) and true and (true and (true and (19.3 = 19.3 or 19.4 = 19.4))) do if p19a = .p19a.l1 and true: p19a := .p19a.l2 elif p19a = .p19a.l2 and true: p19a := .p19a.l2 end, p19b_v := if p19a = .p19a.l1 and true: 19.1 else 19.2 end;
    edge e20 when (p20a = .p20a.l1 and (true or true) or p20a = .p20a.l2 and (true or true)) and (true and true) do if p20a = .p20a.l1 and true: p20a := .p20a.l2 elif p20a = .p20a.l1 and true: p20a := .p20a.l1 elif p20a = .p20a.l2 and true: p20a := .p20a.l2 elif p20a = .p20a.l2 and true: p20a := .p20a.l2 end, p20b_v := if p20a = .p20a.l1 and true: 20.1 elif p20a = .p20a.l1 and true: 20.2 elif p20a = .p20a.l2 and true: 20.3 else 20.4 end;
    edge e20c when (true and (true or true) or (send20c_2 = .send20c_2.l1 and (true or true) or send20c_2 = .send20c_2.l2 and true)) and (true and (true or true) or (recv20c_2 = .recv20c_2.l1 and (true or true) or recv20c_2 = .recv20c_2.l2 and true)) and (true and ((true or true) and (sync20c_2 = .sync20c_2.l1 and (true or true) or sync20c_2 = .sync20c_2.l2 and true))) do if true and true: send20c_1_x := send20c_1_x + 11 elif true and true: send20c_1_x := send20c_1_x + 22 elif send20c_2 = .send20c_2.l1 and true: send20c_2_y := send20c_2_y + 33, send20c_2 := .send20c_2.l2 elif send20c_2 = .send20c_2.l1 and true: send20c_2 := .send20c_2.l1 elif send20c_2 = .send20c_2.l2 and true: send20c_2_y := send20c_2_y + 55 end, if true and true: recv20c_1_a := if true and true: send20c_1_x + 1 elif true and true: send20c_1_x + 2 elif send20c_2 = .send20c_2.l1 and true: send20c_2_y + 3 elif send20c_2 = .send20c_2.l1 and true: send20c_2_y + 4 else send20c_2_y + 5 end + 6 elif true and true: recv20c_1_a := if true and true: send20c_1_x + 1 elif true and true: send20c_1_x + 2 elif send20c_2 = .send20c_2.l1 and true: send20c_2_y + 3 elif send20c_2 = .send20c_2.l1 and true: send20c_2_y + 4 else send20c_2_y + 5 end + 7 elif recv20c_2 = .recv20c_2.l1 and true: recv20c_2_b := if true and true: send20c_1_x + 1 elif true and true: send20c_1_x + 2 elif send20c_2 = .send20c_2.l1 and true: send20c_2_y + 3 elif send20c_2 = .send20c_2.l1 and true: send20c_2_y + 4 else send20c_2_y + 5 end + 8, recv20c_2 := .recv20c_2.l2 elif recv20c_2 = .recv20c_2.l1 and true: recv20c_2 := .recv20c_2.l1 elif recv20c_2 = .recv20c_2.l2 and true: recv20c_2_b := if true and true: send20c_1_x + 1 elif true and true: send20c_1_x + 2 elif send20c_2 = .send20c_2.l1 and true: send20c_2_y + 3 elif send20c_2 = .send20c_2.l1 and true: send20c_2_y + 4 else send20c_2_y + 5 end + 9 end, if true and true: sync20c_1_a := 15 elif true and true: sync20c_1_a := 16 end, if sync20c_2 = .sync20c_2.l1 and true: sync20c_2_b := 8, sync20c_2 := .sync20c_2.l2 elif sync20c_2 = .sync20c_2.l1 and true: sync20c_2 := .sync20c_2.l1 elif sync20c_2 = .sync20c_2.l2 and true: sync20c_2_b := 9 end;
    edge e21 when (p21a = .p21a.l1 and true or p21a = .p21a.l2 and true) and (true and (true or true)) do if p21a = .p21a.l1 and true: p21a := .p21a.l2 elif p21a = .p21a.l2 and true: p21a := .p21a.l2 end;
    edge e22 when (p22a = .p22a.l1 and true or p22a = .p22a.l2 and true) and (true and (true or true)) do if p22a = .p22a.l1 and true: p22a := .p22a.l2 elif p22a = .p22a.l2 and true: p22a := .p22a.l2 end, if true and true: (p22b_v1, p22b_v2) := (if p22a = .p22a.l1 and true: 22.1 else 22.2 end, p22b_v1 + p22b_v2 + 22.3) elif true and true: p22b_v2 := p22b_v1 + p22b_v2 + 22.4 end;
    edge e23 when true and (true and (p23b = .p23b.l1 and (true or true) or (p23b = .p23b.l2 and (true or true) or p23b = .p23b.l3 and (true or true)))) do if p23b = .p23b.l1 and true: (p23b_v1, p23b_v2) := (23.0, 23.0 + p23b_v2 + 23.1) elif p23b = .p23b.l1 and true: p23b := .p23b.l1 elif p23b = .p23b.l2 and true: p23b := .p23b.l2 elif p23b = .p23b.l2 and true: (p23b_v1, p23b_v2) := (23.0, 23.0 + p23b_v2 + 23.2) elif p23b = .p23b.l3 and true: (p23b_v1, p23b_v2) := (23.0, 23.0 + p23b_v2 + 23.3) elif p23b = .p23b.l3 and true: (p23b_v1, p23b_v2) := (23.0, p23b_v1 + p23b_v2 + 23.4) end;
    edge e24 when true and (true and (p24b = .p24b.l1 and (true or true) or (p24b = .p24b.l2 and (true or true) or p24b = .p24b.l3 and (true or true)))) do if p24b = .p24b.l1 and true: p24b_v1 := p24b_v1 + 24.1 elif p24b = .p24b.l1 and true: p24b := .p24b.l1 elif p24b = .p24b.l2 and true: p24b := .p24b.l2 elif p24b = .p24b.l2 and true: p24b_v1 := p24b_v1 + 24.2 elif p24b = .p24b.l3 and true: p24b_v1 := p24b_v1 + 24.3 elif p24b = .p24b.l3 and true: p24b_v1 := p24b_v1 + 24.4 end;
    edge e26 when true and true and (true and (true or true or (true or true))) do if true and true: p26b_v[a] := 26 - 25 elif true and true: p26b_v[b] := 26 - 25 elif true and true: p26b_v := (26 - 25, 26 - 25) elif true and true: p26b_l[26 - 25] := 26 - 25 end;
    edge e27a when true and true and (true and (true or true or (true or true))) do if true and true: p27b_v1[d] := 27.0 elif true and true: p27b_v1[c][a] := 27.0 elif true and true: p27b_v1[c][b] := 27.0 elif true and true: p27b_v1 := ((27.0, 27.0), 27.0) end;
    edge e27b when true and true and (true and (true or true)) do if true and true: p27b_v2[2][2] := 2 elif true and true: p27b_v2[floor(p27b_v1[0][1])][2] := 2 end;
    edge e28 when true and true and (true and true) do (p28b_v1, p28b_v2) := (28.0, 28.0 + p28b_v1 + p28b_v2 + 28.3);
    edge e30 when true and (true and 30.3 = 30.3);
    edge e31a when true and (true and 31.3 = 31.3);
    edge e31b when true and 31.2 = 31.2;
    edge e34 when p34 = .p34.l1 and false or p34 = .p34.l2 and true or (p34 = .p34.l3 and false or p34 = .p34.l4 and false) do p34 := .p34.l1;
    edge f27 when true and true and (true and (true or (true or true))) do if true and true: q27b_v := (q27b_v[a], q27b_v[b]) elif true and true: q27b_v := (q27b_v[0], 27.1) elif true and true: q27b_v[a] := q27b_v[0] + q27b_v[1] + 27.1 end;
    edge .p15a.e15a when p15a = .p15a.l1 and (true or true) or (p15a = .p15a.l2 and (true or true) or p15a = .p15a.l3 and (true or true)) do if p15a = .p15a.l1 and true: p15a_v := 15.1, p15a := .p15a.l2 elif p15a = .p15a.l1 and true: p15a := .p15a.l3 elif p15a = .p15a.l2 and true: p15a := .p15a.l1 elif p15a = .p15a.l2 and true: p15a_v := 15.2, p15a := .p15a.l3 elif p15a = .p15a.l3 and true: p15a_v := 15.3, p15a := .p15a.l1 elif p15a = .p15a.l3 and true: p15a_v := 15.4, p15a := .p15a.l2 end;
    edge .p15b.e15b when p15b = .p15b.l1 and (true or true) or (p15b = .p15b.l2 and (true or true) or p15b = .p15b.l3 and (true or true)) do if p15b = .p15b.l1 and true: p15b_v := 15.1 elif p15b = .p15b.l1 and true: p15b := .p15b.l1 elif p15b = .p15b.l2 and true: p15b := .p15b.l2 elif p15b = .p15b.l2 and true: p15b_v := 15.2 elif p15b = .p15b.l3 and true: p15b_v := 15.3 elif p15b = .p15b.l3 and true: p15b_v := 15.4 end;
    edge .p16.e16 when p16 = .p16.l1 and 16 = 16 or p16 = .p16.l2 and false do p16_v := 16.1, p16 := .p16.l2;
    edge p3.e3 when true and true;
    edge .p37.e37 when p37 = .p37.l1 and (37.1 = 37.1 or 37.2 = 37.2) or p37 = .p37.l2 and 37.3 = 37.3;
    edge .p38.e38 when true do if p38 = .p38.l1 and true: p38_v := p38_v + 38.1 elif p38 = .p38.l1 and true: p38 := .p38.l1 elif p38 = .p38.l2 and p38_v = 38.2: p38 := .p38.l2 elif p38 = .p38.l2 and p38_v = 38.3: p38_v := p38_v + 38.4 elif p38 = .p38.l2 and (not(p38_v = 38.2) and not(p38_v = 38.3)): p38 := .p38.l2 elif p38 = .p38.l3 and p38_v >= 10.0: p38_v := p38_v + 38.5 elif p38 = .p38.l3 and p38_v <= 15.0: p38_v := p38_v + 38.6 elif p38 = .p38.l3 and (not(p38_v >= 10.0) and not(p38_v <= 15.0)): p38 := .p38.l3 elif p38 = .p38.l4 and p38_v >= 10.0: p38 := .p38.l4 elif p38 = .p38.l4 and p38_v <= 15.0: p38_v := p38_v + 38.7 elif p38 = .p38.l4 and (not(p38_v >= 10.0) and not(p38_v <= 15.0)): p38 := .p38.l4 elif p38 = .p38.l5 and p38_v >= 10.0: p38_v := p38_v + 38.8 elif p38 = .p38.l5 and p38_v <= 15.0: p38 := .p38.l5 elif p38 = .p38.l5 and (not(p38_v >= 10.0) and not(p38_v <= 15.0)): p38 := .p38.l5 elif p38 = .p38.l6 and true: p38_v := p38_v + 38.9 elif p38 = .p38.l6 and true: p38_v := p38_v + 38.11, p38 := .p38.l4 end;
    edge p4.e4 when true and true;
    edge .p40.e40 when true do if p40 = .p40.l1 and p40_v > 40.0: p40_v := 40.1, p40 := .p40.l2 elif p40 = .p40.l1 and not(p40_v > 40.0): p40 := .p40.l1 elif p40 = .p40.l2 and true: p40 := .p40.l2 end;
    edge p41.e41a when false and (true and true);
    edge p41.e41b when false and (true and true);
    edge .p5.e5 when p5 = .p5.l1 and true or p5 = .p5.l2 and true do if p5 = .p5.l1 and true: p5 := .p5.l2 elif p5 = .p5.l2 and true: p5 := .p5.l1 end;
    edge .p6.e6a when p6 = .p6.l1 and false or p6 = .p6.l2 and true do p6 := .p6.l1;
    edge .p6.e6b when p6 = .p6.l1 and true or p6 = .p6.l2 and false do p6 := .p6.l2;
    edge .p7.e7 when p7 = .p7.l1 and (true or true) or p7 = .p7.l2 and true do if p7 = .p7.l1 and true: p7 := .p7.l2 elif p7 = .p7.l1 and true: p7 := .p7.l1 elif p7 = .p7.l2 and true: p7 := .p7.l1 end;
    edge p8.e8a when true and true;
    edge p8.e8b when true and false;
    edge .p9.e9 when p9 = .p9.l1 and true or p9 = .p9.l2 and false do p9 := .p9.l2;
    edge tau when annos = .annos.loc1 do annos := .annos.loc2;
    edge tau when true and true;
    edge tau when p11 = .p11.l1 and (11.1 = 11.1 and 11.2 = 11.2) do p11 := .p11.l2;
    edge tau when p11 = .p11.l1 and 11.3 = 11.3;
    edge tau when p11 = .p11.l2 and 11.4 = 11.4 do p11 := .p11.l1;
    edge tau when p16 = .p16.l1 and 16 = 16 do p16_v := 16.1, p16 := .p16.l2;
    edge tau when true do p17_dv := 17.0, p17_cv := 17.1;
    edge tau when true do (p17_dv, p17_cv) := (17.2, 17.3);
    edge tau when true do p25_v := 25.1;
    edge tau when true do p25_v := 25.2;
    edge tau when true and 30.2 = 30.2;
    edge tau when true and 31.3 = 31.3;
    edge when p36 = .p36.l1 or p36 = .p36.l2 or (p37 = .p37.l1 and 37.1 = 37.1 or (p37 = .p37.l1 and 37.2 = 37.2 or p37 = .p37.l2 and 37.3 = 37.3)) now do u := false;
end
initial 34.0 = 34.0;
marked 33.0 = 33.0;
invariant 32.0 = 32.0;
