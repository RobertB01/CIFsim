event e;
const int[5..5] a2StateEvtExcls = 5;
const int[6..6] a2StateEvtExcls2 = 6;
const bool named_and_unnamed_autNAME12b = true;
automaton aut:
  location:
    initial;
    edge e;
end
group g:
  automaton StateEvtExcls:
    location:
      initial;
      marked;
      edge e when 203 = 203, 204 = 204, not(205 = 205), not(206 = 206);
  end
  plant automaton PlantStateEvtExcls:
    location:
      initial;
      marked;
      edge e when 213 = 213, 214 = 214, not(215 = 215), not(216 = 216);
  end
  requirement automaton RequirementStateEvtExcls:
    location:
      initial;
      marked;
      edge e when 223 = 223, 224 = 224, not(225 = 225), not(226 = 226);
  end
  supervisor automaton SupervisorStateEvtExcls:
    location:
      initial;
      marked;
      edge e when 233 = 233, 234 = 234, not(235 = 235), not(236 = 236);
  end
  invariant 201 = 201;
  invariant 202 = 202;
  plant invariant 211 = 211;
  plant invariant 212 = 212;
  requirement invariant 221 = 221;
  requirement invariant 222 = 222;
  supervisor invariant 231 = 231;
  supervisor invariant 232 = 232;
end
automaton a:
  invariant 301 = 301;
  invariant 302 = 302;
  plant invariant 311 = 311;
  plant invariant 312 = 312;
  requirement invariant 321 = 321;
  requirement invariant 322 = 322;
  supervisor invariant 331 = 331;
  supervisor invariant 332 = 332;
  location:
    initial;
    invariant 401 = 401;
    invariant 402 = 402;
    plant invariant 411 = 411;
    plant invariant 412 = 412;
    requirement invariant 421 = 421;
    requirement invariant 422 = 422;
    supervisor invariant 431 = 431;
    supervisor invariant 432 = 432;
end
automaton a2:
  location x:
    initial;
end
automaton a3:
  location x1:
    initial;
    invariant 601 = 601;
  location x2:
    initial;
  location x3:
    initial;
end
automaton a4:
  event e1;
  event e2;
  location x0:
    initial;
    edge e1, e2;
  location x1:
    initial;
  location x2:
    initial;
  location x3:
    initial;
end
group named_and_unnamed_grp:
  event e;
  automaton aut:
    location:
      initial;
      edge e;
  end
  @doc("2")
  automaton NAME2:
    location:
      initial;
      marked;
      edge e when 2 = 2;
  end
  @doc("4")
  automaton NAME4:
    location:
      initial;
      marked;
      edge e when not(4 = 4);
  end
  @doc("6")
  plant automaton NAME6:
    location:
      initial;
      marked;
      edge e when 6 = 6;
  end
  @doc("8")
  plant automaton NAME8:
    location:
      initial;
      marked;
      edge e when not(8 = 8);
  end
  @doc("10")
  requirement automaton NAME10:
    location:
      initial;
      marked;
      edge e when 10 = 10;
  end
  @doc("12")
  requirement automaton NAME12:
    location:
      initial;
      marked;
      edge e when not(12 = 12);
  end
  @doc("13")
  automaton StateEvtExcls:
    location:
      initial;
      marked;
      edge e when 13 = 13;
  end
  automaton StateEvtExcls2:
    location:
      initial;
      marked;
      edge e when 1 = 1, not(3 = 3);
  end
  plant automaton PlantStateEvtExcls:
    location:
      initial;
      marked;
      edge e when 5 = 5, not(7 = 7);
  end
  requirement automaton RequirementStateEvtExcls:
    location:
      initial;
      marked;
      edge e when 9 = 9, not(11 = 11);
  end
end
automaton named_and_unnamed_aut:
  event e;
  location loc1:
    initial;
    edge e;
  location loc2:
    initial;
end
automaton StateEvtExcls:
  location:
    initial;
    marked;
    edge e when 103 = 103, 104 = 104, not(105 = 105), not(106 = 106);
end
plant automaton PlantStateEvtExcls:
  location:
    initial;
    marked;
    edge e when 113 = 113, 114 = 114, not(115 = 115), not(116 = 116);
end
requirement automaton RequirementStateEvtExcls:
  location:
    initial;
    marked;
    edge e when 123 = 123, 124 = 124, not(125 = 125), not(126 = 126);
end
supervisor automaton SupervisorStateEvtExcls:
  location:
    initial;
    marked;
    edge e when 133 = 133, 134 = 134, not(135 = 135), not(136 = 136);
end
automaton aStateEvtExcls:
  location:
    initial;
    marked;
    edge e when 303 = 303, 304 = 304, not(305 = 305), not(306 = 306), 403 = 403, 404 = 404, not(405 = 405), not(406 = 406);
end
plant automaton aPlantStateEvtExcls:
  location:
    initial;
    marked;
    edge e when 313 = 313, 314 = 314, not(315 = 315), not(316 = 316), 413 = 413, 414 = 414, not(415 = 415), not(416 = 416);
end
requirement automaton aRequirementStateEvtExcls:
  location:
    initial;
    marked;
    edge e when 323 = 323, 324 = 324, not(325 = 325), not(326 = 326), 423 = 423, 424 = 424, not(425 = 425), not(426 = 426);
end
supervisor automaton aSupervisorStateEvtExcls:
  location:
    initial;
    marked;
    edge e when 333 = 333, 334 = 334, not(335 = 335), not(336 = 336), 433 = 433, 434 = 434, not(435 = 435), not(436 = 436);
end
automaton a2StateEvtExcls3:
  location:
    initial;
    marked;
    edge e when 501 = 501;
end
automaton a3StateEvtExcls:
  location:
    initial;
    marked;
    edge e when a3.x2 => 602 = 602, a3.x3 => not(603 = 603);
end
automaton a4StateEvtExcls:
  location:
    initial;
    marked;
    edge a4.e1 when a4.x1 => 701 = 701, a4.x1 => 702 = 702, a4.x2 => not(711 = 711), a4.x2 => not(712 = 712), a4.x3 => 721 = 721, a4.x3 => 722 = 722, a4.x3 => not(725 = 725), a4.x3 => not(726 = 726);
    edge a4.e2 when a4.x1 => 703 = 703, a4.x2 => not(713 = 713), a4.x3 => 723 = 723, a4.x3 => 724 = 724, a4.x3 => not(727 = 727), a4.x3 => not(728 = 728);
end
@doc("2")
automaton named_and_unnamed_autNAME2a:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when 2 = 2;
end
@doc("4")
automaton named_and_unnamed_autNAME4a:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when not(4 = 4);
end
@doc("6")
plant automaton named_and_unnamed_autNAME6a:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when 6 = 6;
end
@doc("8")
plant automaton named_and_unnamed_autNAME8a:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when not(8 = 8);
end
@doc("10")
requirement automaton named_and_unnamed_autNAME10a:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when 10 = 10;
end
@doc("12")
requirement automaton named_and_unnamed_autNAME12a:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when not(12 = 12);
end
@doc("13")
automaton named_and_unnamed_autStateEvtExcls:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when 13 = 13;
end
@doc("2")
automaton named_and_unnamed_autNAME2b:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when named_and_unnamed_aut.loc1 => 2 = 2;
end
@doc("4")
automaton named_and_unnamed_autNAME4b:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when named_and_unnamed_aut.loc1 => not(4 = 4);
end
@doc("6")
plant automaton named_and_unnamed_autNAME6b:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when named_and_unnamed_aut.loc1 => 6 = 6;
end
@doc("8")
plant automaton named_and_unnamed_autNAME8b:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when named_and_unnamed_aut.loc1 => not(8 = 8);
end
@doc("10")
requirement automaton named_and_unnamed_autNAME10b:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when named_and_unnamed_aut.loc1 => 10 = 10;
end
@doc("12")
requirement automaton named_and_unnamed_autNAME12b2:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when named_and_unnamed_aut.loc1 => not(12 = 12);
end
@doc("13")
automaton named_and_unnamed_autStateEvtExcls2:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when named_and_unnamed_aut.loc1 => 13 = 13;
end
automaton named_and_unnamed_autStateEvtExcls3:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when 1 = 1, not(3 = 3), named_and_unnamed_aut.loc1 => 1 = 1, named_and_unnamed_aut.loc1 => not(3 = 3);
end
plant automaton named_and_unnamed_autPlantStateEvtExcls:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when 5 = 5, not(7 = 7), named_and_unnamed_aut.loc1 => 5 = 5, named_and_unnamed_aut.loc1 => not(7 = 7);
end
requirement automaton named_and_unnamed_autRequirementStateEvtExcls:
  location:
    initial;
    marked;
    edge named_and_unnamed_aut.e when 9 = 9, not(11 = 11), named_and_unnamed_aut.loc1 => 9 = 9, named_and_unnamed_aut.loc1 => not(11 = 11);
end
invariant 101 = 101;
invariant 102 = 102;
plant invariant 111 = 111;
plant invariant 112 = 112;
requirement invariant 121 = 121;
requirement invariant 122 = 122;
supervisor invariant 131 = 131;
supervisor invariant 132 = 132;
