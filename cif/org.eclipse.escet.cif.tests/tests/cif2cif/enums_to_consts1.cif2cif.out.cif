type t = int[0..2];
const int[0..0] RED = 0;
const int[1..1] GREEN = 1;
const int[2..2] BLUE = 2;
automaton p:
  disc int[0..1] v1 = UP;
  disc int[0..1] v2 = DOWN;
  const int[0..0] UP = 0;
  const int[1..1] DOWN = 1;
  invariant v2 = UP;
  location:
    initial;
end
automaton a:
  disc t x = BLUE;
  invariant x = BLUE;
  invariant switch x: case RED: true case GREEN: false case BLUE: true or false end;
  location:
    initial;
end
automaton q:
  disc int[0..1] d = DOWN;
  const int[0..0] UP = 0;
  const int[1..1] DOWN = 1;
  invariant d = UP;
  location:
    initial;
end
group annos:
  input int[0..1] i;
  @doc("lit1")
  const int[0..0] L1 = 0;
  @doc("lit2")
  const int[1..1] L2 = 1;
  invariant i = L1;
end
invariant RED = GREEN;
invariant RED = RED;
invariant p.v1 = p.UP;
invariant p.UP = q.UP and p.DOWN = q.DOWN;
