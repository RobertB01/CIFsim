group a:
  initial true and true;
  marked true and false;
  invariant 21 = 21;
  plant invariant 22 = 22;
  requirement invariant 23 = 23;
  supervisor invariant 24 = 24;
end
group p:
  initial true and true;
  marked true and false;
  invariant 31 = 31;
  plant invariant 32 = 32;
  requirement invariant 33 = 33;
  supervisor invariant 34 = 34;
end
group r:
  initial true and true;
  marked true and false;
  invariant 41 = 41;
  plant invariant 42 = 42;
  requirement invariant 43 = 43;
  supervisor invariant 44 = 44;
end
group s:
  event e;
  enum LPE = l1, l2;
  initial M.s = l1 and true or M.s = l2 and false;
  marked M.s = l1 and false or M.s = l2 and false;
  invariant 51 = 51;
  plant invariant 52 = 52;
  requirement invariant 53 = 53;
  supervisor invariant 54 = 54;
  invariant M.s = l1 => 61 = 61;
  plant invariant M.s = l1 => 62 = 62;
  requirement invariant M.s = l1 => 63 = 63;
  supervisor invariant M.s = l1 => 64 = 64;
end
automaton M:
  alphabet .s.e;
  disc .s.LPE s = .s.l1;
  location L:
    initial;
    marked;
    edge .s.e when s = .s.l1 and true or s = .s.l2 and false do s := .s.l2;
end
invariant 11 = 11;
plant invariant 12 = 12;
requirement invariant 13 = 13;
supervisor invariant 14 = 14;
