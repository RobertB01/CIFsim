//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2024 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

const bool E = true;
const bool E2 = true;

const bool UP = true;

automaton p:
  enum DIRECTION = UP, DOWN;
  disc DIRECTION v1 = UP;
  disc DIRECTION v2 = DOWN;
  invariant v2 = UP;
  location:
    initial;
end

enum COLOR = RED, GREEN, BLUE;
type t = COLOR;

invariant RED = GREEN, RED = RED, p.v1 = p.UP;

automaton a:
  disc t x = BLUE;
  invariant x = BLUE;
  invariant switch x:
              case RED:   true
              case GREEN: false
              case BLUE:  true or false
            end;
  location:
    initial;
end

automaton q:
  enum DIRECTION = UP, DOWN;
  disc DIRECTION d = DOWN;
  invariant d = UP;
  location:
    initial;
end

invariant p.UP = q.UP and p.DOWN = q.DOWN;
invariant E or E2 or UP;

group annos1:
  // Multiple references to L1, before the enumeration itself is considered.
  invariant annos2.i = annos2.L1, annos2.i != annos2.L1;
end
group annos2:
  @doc("enum1")
  enum E =
    @doc("lit1a")
    L1,
    @doc("lit1b")
    L2;
  input E i;
end
group annos3:
  // Multiple references to L2, after the enumeration itself is considered.
  invariant annos2.i = annos2.L2, annos2.i != annos2.L2;
end
group annos4:
  @doc("enum2")
  enum E =
    @doc("lit2a")
    L1,
    @doc("lit2b")
    L2;
end
group annos5:
  @doc("enum3")
  enum E =
    @doc("lit3a")
    L1,
    @doc("lit3b1")
    @doc("lit3b2")
    L2;
end
