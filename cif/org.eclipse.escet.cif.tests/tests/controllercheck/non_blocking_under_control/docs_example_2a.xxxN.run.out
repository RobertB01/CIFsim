Loading CIF specification "controllercheck/non_blocking_under_control/docs_example_2a.cif".
Preparing for BDD-based checks:
    CIF variables and location pointers:
        Nr     Kind              Type  Name          Group  BDD vars  CIF values  BDD values  Values used
        -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
        1      location pointer  n/a   Supervisor2a  0      2 * 2     3 * 2       4 * 2       75%
        -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
        Total                                        1      4         6           8           75%

    Skipping variable ordering: only one variable present.

    Restricting system behavior using state/event exclusion plant invariants:
        No guards changed.

Checking for non-blocking under control:
    Computing the condition for no controllable event to be enabled:
        Condition under which no controllable event is enabled: Supervisor2a.BothDone

    Computing the controllable-complete path states:
        Controllable-complete path states: Supervisor2a.BothDone [controllable-complete path end states predicate]

<<<<<<< HEAD
    Computing the controllable-complete path states...
    Controllable-complete path states: Supervisor2a.BothDone [controllable-complete path end states predicate]
    Controllable-complete path states: true [fixed point].
    Controllable-complete path states: true
=======
        Backward reachability iteration 1:
            Controllable-complete path states: Supervisor2a.BothDone -> not Supervisor2a.Start [backward reach with edge: (event: Supervisor2a.c_act2) (guard: Supervisor2a.Done1) (assignments: Supervisor2a := Supervisor2a.BothDone)]
>>>>>>> refs/remotes/origin/develop

<<<<<<< HEAD
    Computing the bad states...
    Bad states: false [not controllable-complete path states predicate]
    Bad states: false
=======
        Backward reachability iteration 2:
            Controllable-complete path states: not Supervisor2a.Start -> true [backward reach with edge: (event: Supervisor2a.c_act1) (guard: Supervisor2a.Start) (assignments: Supervisor2a := Supervisor2a.Done1)]
>>>>>>> refs/remotes/origin/develop

        Backward reachability iteration 3:
            No change this iteration.

        Controllable-complete path states: true [fixed point].

        Controllable-complete path states: true

    Computing the bad states:
        Bad states: false [not controllable-complete path states predicate]

        Backward reachability iteration 1:
            No change this iteration.

        Bad states: false

    Computing the result of the non-blocking under control check:
        Initial states: Supervisor2a.Start
        Bad initial states: false

    Non-blocking under control: yes

CONCLUSION:
    [UNKNOWN] Bounded response checking was disabled, bounded response property is unknown.
    [OK] The specification is non-blocking under control.
    [UNKNOWN] Finite response checking was disabled, finite response property is unknown.
    [UNKNOWN] Confluence checking was disabled, confluence property is unknown.

The model with the check results has been written to "controllercheck/non_blocking_under_control/docs_example_2a.xxxN.out.cif.real".
