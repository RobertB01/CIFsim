Loading CIF specification "controllercheck/non_blocking_under_control/docs_example_2b.cif".
Preparing for BDD-based checks:
    CIF variables and location pointers:
        Nr     Kind              Type  Name          Group  BDD vars  CIF values  BDD values  Values used
        -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
        1      location pointer  n/a   Supervisor2b  0      2 * 2     4 * 2       4 * 2       100%
        -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
        Total                                        1      4         8           8           100%

    Skipping variable ordering: only one variable present.

    Restricting system behavior using state/event exclusion plant invariants:
        No guards changed.

Checking for non-blocking under control:
    Computing the condition for no controllable event to be enabled:
        Condition under which no controllable event is enabled: Supervisor2b.BothDone or Supervisor2b.Halt

    Computing the controllable-complete path states:
        Controllable-complete path states: Supervisor2b.Halt [controllable-complete path end states predicate]

<<<<<<< HEAD
    Computing the controllable-complete path states...
    Controllable-complete path states: Supervisor2b.Halt [controllable-complete path end states predicate]
    Controllable-complete path states: Supervisor2b.Halt
=======
        Backward reachability iteration 1:
            No change this iteration.
>>>>>>> refs/remotes/origin/develop

<<<<<<< HEAD
    Computing the bad states...
    Bad states: not Supervisor2b.Halt [not controllable-complete path states predicate]
    Bad states: not Supervisor2b.Halt
=======
        Controllable-complete path states: Supervisor2b.Halt
>>>>>>> refs/remotes/origin/develop

    Computing the bad states:
        Bad states: not Supervisor2b.Halt [not controllable-complete path states predicate]

        Backward reachability iteration 1:
            No change this iteration.

        Bad states: not Supervisor2b.Halt

    Computing the result of the non-blocking under control check:
        Initial states: Supervisor2b.Start
        Bad initial states: Supervisor2b.Start

    Non-blocking under control: no

CONCLUSION:
    [UNKNOWN] Bounded response checking was disabled, bounded response property is unknown.
    [ERROR] The specification is NOT non-blocking under control.
    [UNKNOWN] Finite response checking was disabled, finite response property is unknown.
    [UNKNOWN] Confluence checking was disabled, confluence property is unknown.

The model with the check results has been written to "controllercheck/non_blocking_under_control/docs_example_2b.xxxN.out.cif.real".
