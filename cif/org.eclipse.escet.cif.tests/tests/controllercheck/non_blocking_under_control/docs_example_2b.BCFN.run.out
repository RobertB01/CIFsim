Loading CIF specification "controllercheck/non_blocking_under_control/docs_example_2b.cif"...
Preparing for BDD-based checks...

CIF variables and location pointers:
  Nr     Kind              Type  Name         Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  -----------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   Supervisor2  0      2 * 2     4 * 2       4 * 2       100%
  -----  ----------------  ----  -----------  -----  --------  ----------  ----------  -----------
  Total                                       1      4         8           8           100%

Skipping variable ordering: only one variable present.


Restricting system behavior using state/event exclusion plant invariants.

Preparing for MDD-based checks...
Analyzing automaton "Supervisor2"...
    Initializing the automaton data for event "Supervisor2.c_act1"...
    Initializing the automaton data for event "Supervisor2.c_act2"...
    Processing edges from location "Start" of automaton "Supervisor2"...
    Processing edges from location "Done1" of automaton "Supervisor2"...
    Processing edges from location "BothDone" of automaton "Supervisor2"...
    Processing edges from location "Halt" of automaton "Supervisor2"...
    Updating global guards and updates for event "Supervisor2.c_act1"...
    Updating global guards and updates for event "Supervisor2.c_act2"...

Checking for bounded response...
Computing reachable states...
Reachable states: Supervisor2.Start [initial states predicate]
Forward reachability: iteration 1.
Reachable states: Supervisor2.Start -> Supervisor2.Start or Supervisor2.Done1 [forward reach with edge: (event: Supervisor2.c_act1) (guard: Supervisor2.Start) (assignments: Supervisor2 := Supervisor2.Done1)]
Reachable states: Supervisor2.Start or Supervisor2.Done1 -> not Supervisor2.Halt [forward reach with edge: (event: Supervisor2.c_act2) (guard: Supervisor2.Done1) (assignments: Supervisor2 := Supervisor2.BothDone)]
Reachable states: not Supervisor2.Halt -> true [forward reach with edge: (event: Supervisor2.u_button_pushed) (guard: true) (assignments: Supervisor2 := Supervisor2.Halt / Supervisor2 := Supervisor2.Start / none)]
Forward reachability: iteration 2.
Reachable states: true [fixed point].

Computing bound for uncontrollable events...
Bounded response check round 1 (states before round: true).
Bounded response check round 2 (states before round: Supervisor2.Start or Supervisor2.Halt).

Computing bound for controllable events...
Bounded response check round 1 (states before round: true).
Bounded response check round 2 (states before round: Supervisor2.BothDone or Supervisor2.Done1).
Bounded response check round 3 (states before round: Supervisor2.BothDone).

Bounded response check completed.

Checking for non-blocking under control...
Computing the condition for no controllable event to be enabled...
Condition under which no controllable event is enabled: Supervisor2.BothDone or Supervisor2.Halt

Computing the controllable-complete path states...
Controllable-complete path states: Supervisor2.Halt [controllable-complete path end states predicate]
Backward reachability: iteration 1.
Controllable-complete path states: Supervisor2.Halt

Computing the bad states...
Bad states: not Supervisor2.Halt [not controllable-complete path states predicate]
Backward reachability: iteration 1.
Bad states: not Supervisor2.Halt

Computing the result of the non-blocking under control check...
Initial states: Supervisor2.Start
Bad initial states: Supervisor2.Start

Checking for finite response...

Iteration 1.

Checking for confluence...

Mutual exclusive event pairs:
    (Supervisor2.c_act1, Supervisor2.c_act2)

CONCLUSION:
    [ERROR] The specification does NOT have bounded response:
    
        - An infinite sequence of transitions is possible for uncontrollable events.
        - A sequence of at most 2 transitions is possible for controllable events.

    [ERROR] The specification is NOT non-blocking under control.
    [OK] The specification has finite response.
    [OK] The specification has confluence.

The model with the check results has been written to "controllercheck/non_blocking_under_control/docs_example_2b.BCFN.out.cif.real".
