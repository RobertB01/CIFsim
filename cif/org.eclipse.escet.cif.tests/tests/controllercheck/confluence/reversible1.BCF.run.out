Loading CIF specification "controllercheck/confluence/reversible1.cif"...
Preparing for BDD-based checks...

CIF variables and location pointers:
  Nr     Kind               Type       Name  Group  BDD vars  CIF values  BDD values  Values used
  -----  -----------------  ---------  ----  -----  --------  ----------  ----------  -----------
  1      location pointer   n/a        A     0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer   n/a        B     1      1 * 2     2 * 2       2 * 2       100%
  3      discrete variable  int[0..2]  B.v   2      2 * 2     3 * 2       4 * 2       75%
  -----  -----------------  ---------  ----  -----  --------  ----------  ----------  -----------
  Total                                      3      8         14          16          ~88%

Applying variable ordering:
  Applying 4 orderers, sequentially:
    Applying sorted variable order:
      Effect: both

    Applying DCSH algorithm:
      Metric: wes
      Relations: legacy
      Effect: var-order
      Number of hyper-edges: 6

      Applying Weighted Cuthill-McKee algorithm:
        Node finder: george-liu
        Relations: legacy
        Effect: var-order
        Number of graph edges: 3

        Total span:   4 (total)   0.67 (avg/edge) / WES:   0.666667 (total)   0.111111 (avg/edge) [before]
        Total span:   4 (total)   0.67 (avg/edge) / WES:   0.666667 (total)   0.111111 (avg/edge) [after]

      Found new best variable order.

      Applying Sloan algorithm:
        Relations: legacy
        Effect: var-order
        Number of graph edges: 3

        Total span:   4 (total)   0.67 (avg/edge) / WES:   0.666667 (total)   0.111111 (avg/edge) [before]
        Total span:   4 (total)   0.67 (avg/edge) / WES:   0.555556 (total)   0.092593 (avg/edge) [after]

      Found new best variable order.

      Applying 2 orderers, sequentially:
        Applying Weighted Cuthill-McKee algorithm:
          Node finder: george-liu
          Relations: legacy
          Effect: var-order
          Number of graph edges: 3

          Total span:   4 (total)   0.67 (avg/edge) / WES:   0.666667 (total)   0.111111 (avg/edge) [before]
          Total span:   4 (total)   0.67 (avg/edge) / WES:   0.666667 (total)   0.111111 (avg/edge) [after]

        Reversing the variable order:
          Relations: legacy
          Effect: var-order
          Number of hyper-edges: 6

          Total span:   4 (total)   0.67 (avg/edge) / WES:   0.666667 (total)   0.111111 (avg/edge) [before]
          Total span:   4 (total)   0.67 (avg/edge) / WES:   0.666667 (total)   0.111111 (avg/edge) [reversed]

      Found new best variable order.

      Applying 2 orderers, sequentially:
        Applying Sloan algorithm:
          Relations: legacy
          Effect: var-order
          Number of graph edges: 3

          Total span:   4 (total)   0.67 (avg/edge) / WES:   0.666667 (total)   0.111111 (avg/edge) [before]
          Total span:   4 (total)   0.67 (avg/edge) / WES:   0.555556 (total)   0.092593 (avg/edge) [after]

        Reversing the variable order:
          Relations: legacy
          Effect: var-order
          Number of hyper-edges: 6

          Total span:   4 (total)   0.67 (avg/edge) / WES:   0.555556 (total)   0.092593 (avg/edge) [before]
          Total span:   4 (total)   0.67 (avg/edge) / WES:   0.555556 (total)   0.092593 (avg/edge) [reversed]

    Applying FORCE algorithm:
      Metric: total-span
      Relations: linearized
      Effect: var-order
      Number of hyper-edges: 3
      Maximum number of iterations: 20

      Total span:   4 (total)   1.33 (avg/edge) / WES:   1.037037 (total)   0.345679 (avg/edge) [before]
      Total span:   4 (total)   1.33 (avg/edge) / WES:   1.037037 (total)   0.345679 (avg/edge) [iteration 1]
      Total span:   4 (total)   1.33 (avg/edge) / WES:   1.037037 (total)   0.345679 (avg/edge) [after]

    Applying sliding window algorithm:
      Size: 4
      Metric: total-span
      Relations: linearized
      Effect: var-order
      Number of hyper-edges: 3
      Window length: 3

      Total span:   4 (total)   1.33 (avg/edge) / WES:   1.037037 (total)   0.345679 (avg/edge) [before]
      Total span:   4 (total)   1.33 (avg/edge) / WES:   1.037037 (total)   0.345679 (avg/edge) [after]

Variable order changed.

CIF variables and location pointers:
  Nr     Kind               Type       Name  Group  BDD vars  CIF values  BDD values  Values used
  -----  -----------------  ---------  ----  -----  --------  ----------  ----------  -----------
  1      discrete variable  int[0..2]  B.v   0      2 * 2     3 * 2       4 * 2       75%
  2      location pointer   n/a        B     1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer   n/a        A     2      1 * 2     2 * 2       2 * 2       100%
  -----  -----------------  ---------  ----  -----  --------  ----------  ----------  -----------
  Total                                      3      8         14          16          ~88%


Restricting system behavior using state/event exclusion plant invariants.

Preparing for MDD-based checks...
Analyzing automaton "A"...
    Initializing the automaton data for event "a"...
    Processing edges from location "p" of automaton "A"...
    Processing edges from location "q" of automaton "A"...
    Updating global guards and updates for event "a"...
Analyzing automaton "B"...
    Initializing the automaton data for event "b"...
    Initializing the automaton data for event "c"...
    Processing edges from location "p" of automaton "B"...
    Processing edges from location "q" of automaton "B"...
    Updating global guards and updates for event "b"...
    Updating global guards and updates for event "c"...

Checking for bounded response...
Computing reachable states...
Reachable states: B.v = 0 and (B.p and A.p) [initial states predicate]
Forward reachability: iteration 1.
Reachable states: B.v = 0 and (B.p and A.p) -> B.v = 0 and B.p [forward reach with edge: (event: a) (guard: A.p) (assignments: A := A.q)]
Reachable states: B.v = 0 and B.p -> B.v = 0 and B.p or B.v = 2 and (B.q and A.p) [forward reach with edge: (event: b) (guard: B.v = 0 and (B.p and A.p)) (assignments: B.v := B.v + 2, B := B.q)]
Forward reachability: iteration 2.
Reachable states: B.v = 0 and B.p or B.v = 2 and (B.q and A.p) -> B.v = 0 and B.p or B.v = 2 and B.q [forward reach with edge: (event: a) (guard: A.p) (assignments: A := A.q)]
Forward reachability: iteration 3.
Reachable states: B.v = 0 and B.p or B.v = 2 and B.q [fixed point].

Computing bound for uncontrollable events...
Bounded response check round 1 (states before round: B.v = 0 and B.p or B.v = 2 and B.q).

Computing bound for controllable events...
Bounded response check round 1 (states before round: B.v = 0 and B.p or B.v = 2 and B.q).
Bounded response check round 2 (states before round: B.v = 0 and (B.p and A.q) or B.v = 2 and B.q).
Bounded response check round 3 (states before round: B.v = 0 and (B.p and A.q) or B.v = 2 and (B.q and A.q)).
Bounded response check round 4 (states before round: B.v = 0 and (B.p and A.q)).

Bounded response check completed.

Checking for finite response...

Iteration 1.
    The following events have been encountered in a controllable-event loop of automaton B:
        (b c), which is controllable unconnectable.

Checking for confluence...

Mutual exclusive event pairs:
    (a, c), (b, c)

Reversible event pairs:
    (a, b)

CONCLUSION:
    [OK] The specification has bounded response:
    
        - No transitions are possible for uncontrollable events.
        - A sequence of at most 3 transitions is possible for controllable events.

    [UNKNOWN] Non-blocking under control checking was disabled, non-blocking under control property is unknown.
    [OK] The specification has finite response.
    [OK] The specification has confluence.

The model with the check results has been written to "controllercheck/confluence/reversible1.BCF.out.cif.real".
