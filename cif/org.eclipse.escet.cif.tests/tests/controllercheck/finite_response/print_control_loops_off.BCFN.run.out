Loading CIF specification "controllercheck/finite_response/print_control_loops_off.cif"...
Preparing for BDD-based checks...
    CIF variables and location pointers:
        Nr     Kind              Type  Name  Group  BDD vars  CIF values  BDD values  Values used
        -----  ----------------  ----  ----  -----  --------  ----------  ----------  -----------
        1      location pointer  n/a   p     0      1 * 2     2 * 2       2 * 2       100%
        -----  ----------------  ----  ----  -----  --------  ----------  ----------  -----------
        Total                                1      2         4           4           100%

    Skipping variable ordering: only one variable present.

    Restricting system behavior using state/event exclusion plant invariants:
        No guards changed.

Preparing for MDD-based checks...
    Analyzing automaton "p"...
        Initializing the automaton data for event "p.c1"...
        Initializing the automaton data for event "p.c2"...
        Processing edges from location "loc1" of automaton "p"...
        Processing edges from location "loc2" of automaton "p"...
        Updating global guards and updates for event "p.c1"...
        Updating global guards and updates for event "p.c2"...

Checking for bounded response...
    Computing reachable states:
        Reachable states: p.loc1 [initial states predicate]

        Forward reachability iteration 1:
            Reachable states: p.loc1 -> true [forward reach with edge: (event: p.c1) (guard: p.loc1) (assignments: p := p.loc2)]

        Forward reachability iteration 2:
            No change this iteration.

        Reachable states: true [fixed point].

    Computing bound for uncontrollable events...
        Bounded response check round 1 (states before round: true).

        Bound: 0.

    Computing bound for controllable events...
        Bounded response check round 1 (states before round: true).

        Bound: n/a (cycle).

    Bounded response check completed.

Checking for non-blocking under control...
    Computing the condition for no controllable event to be enabled:
        Condition under which no controllable event is enabled: false

    Computing the controllable-complete path states...
        Controllable-complete path states: false [controllable-complete path end states predicate]

        Backward reachability iteration 1:
            No change this iteration.

        Controllable-complete path states: false

    Computing the bad states...
        Bad states: true [not controllable-complete path states predicate]

        Backward reachability iteration 1:
            No change this iteration.

        Bad states: true

    Computing the result of the non-blocking under control check...
        Initial states: p.loc1
        Bad initial states: p.loc1

    Non-blocking under control: no

Checking for finite response...
    Iteration 1.
        The following events have been encountered in a controllable-event loop of automaton p:
            (p.c1 p.c2), which is not controllable unconnectable.

Checking for confluence...
    Mutual exclusive event pairs:
        (p.c1, p.c2)

CONCLUSION:
    [ERROR] The specification does NOT have bounded response:

        - No transitions are possible for uncontrollable events.
        - An infinite sequence of transitions is possible for controllable events.

    [ERROR] The specification is NOT non-blocking under control.

    [ERROR] The specification may NOT have finite response:

        At least one controllable-event loop was found.

    [OK] The specification has confluence.

The model with the check results has been written to "controllercheck/finite_response/print_control_loops_off.BCFN.out.cif.real".
