WARNING: The alphabet of the specification contains no controllable events.
WARNING: The specification contains no input variables.
ERROR: CIF controller properties checker failed due to unsatisfied preconditions:

  -------------------------------------------
  (1/37) A 'time' variable reference is used.
  -------------------------------------------
   * In location "p.l":
     - edge u do r := time;
                      ^

  ------------------------------------
  (2/37) A dictionary literal is used.
  ------------------------------------
   * In discrete variable "p.dbb":
     - disc dict(bool:bool) dbb = {true: false};
                                  ^
   * In location "p.l":
     - edge u do dbb := {true: true};
                        ^

  ---------------------------------
  (3/37) A dictionary type is used.
  ---------------------------------
   * In discrete variable "p.dbb":
     - disc dict(bool:bool) dbb = {true: false};
            ^                     ^
   * In location "p.l":
     - edge u do dbb := {true: true};
                 ^      ^

  -----------------------------------
  (4/37) A distribution type is used.
  -----------------------------------
   * In discrete variable "p.db":
     - disc dist bool db = constant(true);
            ^              ^       ^
   * In location "p.l":
     - edge u do (b, db) := sample db;
                 ^   ^      ^      ^

  -------------------------------
  (5/37) A function call is used.
  -------------------------------
   * In discrete variable "p.db":
     - disc dist bool db = constant(true);
                                   ^

  -------------------------------
  (6/37) A function type is used.
  -------------------------------
   * In discrete variable "p.db":
     - disc dist bool db = constant(true);
                           ^
   * In discrete variable "p.fbb":
     - disc func bool(bool) fbb = f;
            ^                     ^
   * In location "p.l":
     - edge u do fbb := f;
                 ^      ^

  ------------------------------
  (7/37) A list literal is used.
  ------------------------------
   * In discrete variable "p.lb":
     - disc list bool lb = [true];
                           ^

  ---------------------------
  (8/37) A list type is used.
  ---------------------------
   * In location "p.l":
     - edge u do lb := lb[:];
                 ^     ^ ^
   * In discrete variable "p.lb":
     - disc list bool lb = [true];
            ^              ^

  ---------------------------------------
  (9/37) A projection expression is used.
  ---------------------------------------
   * In location "p.l":
     - edge u do tbb[a] := true;
                    ^

  -----------------------------------------
  (10/37) A rangeless integer type is used.
  -----------------------------------------
   * In discrete variable "p.i":
     - disc int i;
            ^
   * In location "p.l":
     - edge u do i := i div i;
                 ^    ^ ^   ^
     - edge u do i := i mod i;
                 ^    ^ ^   ^
     - edge u do b := i < i;
                      ^   ^
     - edge u do b := i <= i;
                      ^    ^
     - edge u do b := i > i;
                      ^   ^
     - edge u do b := i >= i;
                      ^    ^
     - edge u do i := +i;
                 ^    ^^
     - edge u do i := -i;
                 ^    ^^

  --------------------------------------
  (11/37) A real number literal is used.
  --------------------------------------
   * In location "p.l":
     - edge u do r := 1.0;
                      ^
     - edge u do r := 1.0;
                      ^
   * In discrete variable "p.r":
     - disc real r = 1.2;
                     ^

  ----------------------------
  (12/37) A real type is used.
  ----------------------------
   * In location "p.l":
     - edge u do r := 1.0;
                 ^    ^
     - edge u do r := 1.0;
                 ^    ^
     - edge u do r := time;
                 ^    ^
     - edge u do r := r + r;
                 ^    ^ ^ ^
     - edge u do r := r - r;
                 ^    ^ ^ ^
     - edge u do r := r * r;
                 ^    ^ ^ ^
     - edge u do r := r / r;
                 ^    ^ ^ ^
   * In discrete variable "p.r":
     - disc real r = 1.2;
            ^        ^

  ------------------------------
  (13/37) A set literal is used.
  ------------------------------
   * In location "p.l":
     - edge u do sb := {true, false};
                       ^
     - edge u do sb := <set bool>{};
                                 ^
   * In discrete variable "p.sb":
     - disc set bool sb = {true};
                          ^

  ---------------------------
  (14/37) A set type is used.
  ---------------------------
   * In location "p.l":
     - edge u do sb := {true, false};
                 ^     ^
     - edge u do sb := <set bool>{};
                 ^      ^        ^
     - edge u do b := true in sb;
                              ^
     - edge u do b := sb sub sb;
                      ^      ^
   * In discrete variable "p.sb":
     - disc set bool sb = {true};
            ^             ^

  -----------------------------------
  (15/37) A slice expression is used.
  -----------------------------------
   * In location "p.l":
     - edge u do lb := lb[:];
                         ^

  ---------------------------------
  (16/37) A string literal is used.
  ---------------------------------
   * In location "p.l":
     - edge u do str := "a";
                        ^
   * In discrete variable "p.str":
     - disc string str = "a";
                         ^

  ------------------------------
  (17/37) A string type is used.
  ------------------------------
   * In location "p.l":
     - edge u do str := "a";
                 ^      ^
   * In discrete variable "p.str":
     - disc string str = "a";
            ^            ^

  --------------------------------
  (18/37) A tuple literal is used.
  --------------------------------
   * In location "p.l":
     - edge u do (b, db) := sample db;
                 ^
   * In discrete variable "p.tbb":
     - disc tuple(bool a; bool b) tbb = (true, false);
                                        ^

  -----------------------------
  (19/37) A tuple type is used.
  -----------------------------
   * In location "p.l":
     - edge u do tbb[a] := true;
                 ^
     - edge u do (b, db) := sample db;
                 ^          ^
   * In discrete variable "p.tbb":
     - disc tuple(bool a; bool b) tbb = (true, false);
            ^                           ^

  ------------------------------------------------------------
  (20/37) Binary operator "*" is used on a real typed operand.
  ------------------------------------------------------------
   * In location "p.l":
     - edge u do r := r * r;
                        ^

  ------------------------------------------------------------
  (21/37) Binary operator "+" is used on a real typed operand.
  ------------------------------------------------------------
   * In location "p.l":
     - edge u do r := r + r;
                        ^

  ------------------------------------------------------------
  (22/37) Binary operator "-" is used on a real typed operand.
  ------------------------------------------------------------
   * In location "p.l":
     - edge u do r := r - r;
                        ^

  ------------------------------------
  (23/37) Binary operator "/" is used.
  ------------------------------------
   * In location "p.l":
     - edge u do r := r / r;
                        ^

  -------------------------------------------------------------------------
  (24/37) Binary operator "<" is used on a rangeless integer typed operand.
  -------------------------------------------------------------------------
   * In location "p.l":
     - edge u do b := i < i;
                        ^

  --------------------------------------------------------------------------
  (25/37) Binary operator "<=" is used on a rangeless integer typed operand.
  --------------------------------------------------------------------------
   * In location "p.l":
     - edge u do b := i <= i;
                        ^

  -------------------------------------------------------------------------
  (26/37) Binary operator ">" is used on a rangeless integer typed operand.
  -------------------------------------------------------------------------
   * In location "p.l":
     - edge u do b := i > i;
                        ^

  --------------------------------------------------------------------------
  (27/37) Binary operator ">=" is used on a rangeless integer typed operand.
  --------------------------------------------------------------------------
   * In location "p.l":
     - edge u do b := i >= i;
                        ^

  ---------------------------------------------------------------------------
  (28/37) Binary operator "div" is used on a rangeless integer typed operand.
  ---------------------------------------------------------------------------
   * In location "p.l":
     - edge u do i := i div i;
                        ^

  -------------------------------------
  (29/37) Binary operator "in" is used.
  -------------------------------------
   * In location "p.l":
     - edge u do b := true in sb;
                           ^

  ---------------------------------------------------------------------------
  (30/37) Binary operator "mod" is used on a rangeless integer typed operand.
  ---------------------------------------------------------------------------
   * In location "p.l":
     - edge u do i := i mod i;
                        ^

  --------------------------------------
  (31/37) Binary operator "sub" is used.
  --------------------------------------
   * In location "p.l":
     - edge u do b := sb sub sb;
                         ^

  ------------------------------------
  (32/37) Edge has a multi-assignment.
  ------------------------------------
   * In location "p.l":
     - edge u do (b, db) := sample db;
                         ^

  -----------------------------------------------
  (33/37) Edge has a partial variable assignment.
  -----------------------------------------------
   * In location "p.l":
     - edge u do tbb[a] := true;
                    ^

  ------------------------------------------------------
  (34/37) Function is an internal user-defined function.
  ------------------------------------------------------
   * In the top-level scope of the specification:
     - func bool f(bool p):
                 ^

  ------------------------------------------------------------------------
  (35/37) Unary operator "+" is used on a rangeless integer typed operand.
  ------------------------------------------------------------------------
   * In location "p.l":
     - edge u do i := +i;
                      ^

  ------------------------------------------------------------------------
  (36/37) Unary operator "-" is used on a rangeless integer typed operand.
  ------------------------------------------------------------------------
   * In location "p.l":
     - edge u do i := -i;
                      ^

  ----------------------------------------
  (37/37) Unary operator "sample" is used.
  ----------------------------------------
   * In location "p.l":
     - edge u do (b, db) := sample db;
                            ^
