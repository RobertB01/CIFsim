Loading CIF specification "controllercheck/bounded_response/bounded_supervised_counter.cif"...
Preparing for BDD-based checks...

CIF variables and location pointers:
  Nr     Kind               Type       Name  Group  BDD vars  CIF values  BDD values  Values used
  -----  -----------------  ---------  ----  -----  --------  ----------  ----------  -----------
  1      discrete variable  int[0..5]  p.x   0      3 * 2     6 * 2       8 * 2       75%
  -----  -----------------  ---------  ----  -----  --------  ----------  ----------  -----------
  Total                                      1      6         12          16          75%

Skipping variable ordering: only one variable present.


Restricting system behavior using state/event exclusion plant invariants.

Edge (event: c_c) (guard: p.x = 2) (assignments: p.x := p.x - 1): guard: p.x = 2 -> false [plant: false].

System:
    Edge: (event: u_a) (guard: p.x = 0) (assignments: p.x := p.x + 1)
    Edge: (event: u_b) (guard: p.x = 1) (assignments: p.x := p.x + 1)
    Edge: (event: u_c) (guard: p.x = 2) (assignments: p.x := p.x + 1)
    Edge: (event: u_d) (guard: false) (assignments: p.x := p.x + 1)
    Edge: (event: c_a) (guard: p.x = 4) (assignments: p.x := p.x - 1)
    Edge: (event: c_b) (guard: p.x = 3) (assignments: p.x := p.x - 1)
    Edge: (event: c_c) (guard: p.x = 2 -> false) (assignments: p.x := p.x - 1)
    Edge: (event: c_d) (guard: p.x = 1) (assignments: p.x := p.x - 1)

Checking for bounded response...
Computing reachable states...
Reachable states: p.x = 0 [initial states predicate]
Forward reachability: iteration 1.
Reachable states: p.x = 0 -> p.x = 0 or p.x = 1 [forward reach with edge: (event: u_a) (guard: p.x = 0) (assignments: p.x := p.x + 1)]
Reachable states: p.x = 0 or p.x = 1 -> p.x != 4 and (p.x != 5 and p.x != 3) [forward reach with edge: (event: u_b) (guard: p.x = 1) (assignments: p.x := p.x + 1)]
Reachable states: p.x != 4 and (p.x != 5 and p.x != 3) -> 0 <= p.x and p.x <= 3 [forward reach with edge: (event: u_c) (guard: p.x = 2) (assignments: p.x := p.x + 1)]
Forward reachability: iteration 2.
Reachable states: 0 <= p.x and p.x <= 3 [fixed point].

Computing bound for uncontrollable events...
Bounded response check round 1 (states before round: 0 <= p.x and p.x <= 3).
Bounded response check round 2 (states before round: p.x = 2 or (p.x = 1 or p.x = 3)).
Bounded response check round 3 (states before round: p.x = 2 or p.x = 3).
Bounded response check round 4 (states before round: p.x = 3).

Computing bound for controllable events...
Bounded response check round 1 (states before round: 0 <= p.x and p.x <= 3).
Bounded response check round 2 (states before round: p.x = 0 or p.x = 2).

Bounded response check completed.

CONCLUSION:
    [OK] The specification has bounded response:
    
        - A sequence of at most 3 transitions is possible for uncontrollable events.
        - A sequence of at most 1 transition is possible for controllable events.

    [UNKNOWN] Finite response checking was disabled, finite response property is unknown.
    [UNKNOWN] Confluence checking was disabled, confluence property is unknown.

The model with the check results has been written to "controllercheck/bounded_response/bounded_supervised_counter.Bxx.out.cif.real".
