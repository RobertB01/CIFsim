//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2021 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

// 'Normal' automata.
event e, f;

plant p:
  disc int x = 2, y = 2;

  location:
    initial;
    urgent;

    edge e when x = 2 do x := x - 1; // first transition
    edge e when x = 1 do x := x - 1; // second transition

    edge f when y = 2 do y := y - 1; // third transition
    edge f when y = 1 do y := y - 1; // no fourth transition
end

plant m:
  monitor e;
  disc int x = 2, y = 2;

  location:
    initial;
    urgent;

    edge e when x = 2 do x := x - 1; // first transition
                                     // second transition (due to input)

    edge f when y = 2 do y := y - 1; // third transition
                                     // no fourth transition (f not input)
end

// 'Simple' automata.
event g, h;

plant a:
  monitor h;

  location l1:
    initial;
    edge g goto l2; // Both g and h possible, g chosen.

  location l2:
    edge h goto l3; // Only h possible.

  location l3;      // No events possible (h already done once, see plant b).
end

plant b:
  disc int x = 0;
  location:
    initial;
    edge h when x = 0 do x := x + 1; // Only allow h once.
end
