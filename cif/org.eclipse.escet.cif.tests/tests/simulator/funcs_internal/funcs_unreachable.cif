//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2022 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

func int f1():
  return 1;             // returns 1
  return 2;
end

func int f2a():
  if true:
    return 3;           // returns 3
  end
  return 4;
end

func int f2b(int x):
  if x > 3:
    return 1;           // returns 1 if x > 3
  else
    return 2;           // returns 2 if x <= 3
  end
  return 3;
end

func int f3():
  while true:
    return 5;           // returns 5
    return 6;
  end
  return 7;
end

func int f4():
  int x = 5;
  while true:
    x := x - 1;
    if x > 0:
      continue;
      return 9;
    end
    return 8;           // returns 8
  end
  return 10;
end

func int f5():
  int x = 5;
  while true:
    x := x - 1;
    if x = 0:
      break;
      return 12;
    end
  end
  return 11;            // returns 11
end

automaton p:
  disc list int x = [f1(), f2a(), f3(), f4(), f5()];
  invariant x = [1, 3, 5, 8, 11];

  disc list int y = [f2b(2), f2b(3), f2b(4), f2b(5)];
  invariant y = [2, 2, 1, 1];

  location:
    initial;
    urgent;
end
