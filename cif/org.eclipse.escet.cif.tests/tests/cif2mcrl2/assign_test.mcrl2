% Generated by CIF to mCRL2.

% Actions for CIF events.
act a1';
act a2';
act b1';
act b2';
act c1';
act c2';
act a3';
act a4';
act b3';
act b4';
act c3';
act c4';
act a5';
act b5';
act c5';

% Actions for CIF variables having certain values.
act A'locx''varvalue: Int;
act A'y''varvalue: Int;

% Process for behavior of the CIF specification.
proc P(
    A'locx': Int,
    A'y': Int
) =
    % CIF linearized edges.
    ((A'y' == 2) && 0 <= 1 && 1 <= 4) -> a1' . P(A'locx' = 1)
    +
    (((A'locx' > 1) && (A'y' == 2)) && 0 <= 2 && 2 <= 4) -> a2' . P(A'locx' = 2)
    +
    ((A'y' > 1) && 0 <= 2 && 2 <= 4) -> a3' . P(A'locx' = 2)
    +
    (0 <= 1 && 1 <= 4) -> a4' . P(A'y' = 1)
    +
    ((A'y' > 1) && 0 <= 2 && 2 <= 4) -> a5' . P(A'y' = 2)
    +
    ((A'y' == 2) && 0 <= (A'locx' + 1) && (A'locx' + 1) <= 4) -> b1' . P(A'locx' = (A'locx' + 1))
    +
    (((A'locx' > 1) && (A'y' == 2)) && 0 <= (A'locx' - 1) && (A'locx' - 1) <= 4) -> b2' . P(A'locx' = (A'locx' - 1))
    +
    ((A'y' > 1) && 0 <= (A'locx' - 1) && (A'locx' - 1) <= 4) -> b3' . P(A'locx' = (A'locx' - 1))
    +
    (0 <= (A'y' + 1) && (A'y' + 1) <= 4) -> b4' . P(A'y' = (A'y' + 1))
    +
    ((A'y' > 1) && 0 <= (A'y' - 1) && (A'y' - 1) <= 4) -> b5' . P(A'y' = (A'y' - 1))
    +
    ((A'y' == 2) && 0 <= (A'y' + 1) && (A'y' + 1) <= 4) -> c1' . P(A'locx' = (A'y' + 1))
    +
    (((A'locx' > 1) && (A'y' == 2)) && 0 <= (A'y' + 1) && (A'y' + 1) <= 4) -> c2' . P(A'locx' = (A'y' + 1))
    +
    ((A'y' > 1) && 0 <= (A'y' + 1) && (A'y' + 1) <= 4) -> c3' . P(A'locx' = (A'y' + 1))
    +
    (0 <= (A'locx' + 1) && (A'locx' + 1) <= 4) -> c4' . P(A'y' = (A'locx' + 1))
    +
    ((A'y' > 1) && 0 <= (A'locx' + 1) && (A'locx' + 1) <= 4) -> c5' . P(A'y' = (A'locx' + 1))
    +
    % CIF variable value actions.
    A'locx''varvalue(A'locx') . P()
    +
    A'y''varvalue(A'y') . P()
;

% Initialization.
init P(0, 0);
