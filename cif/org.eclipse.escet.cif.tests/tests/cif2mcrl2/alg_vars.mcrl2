% Generated by CIF to mCRL2.

% Sorts for CIF enumerations.
sort aut'LPE' = struct aut'loc1' | aut'loc2';

% Actions for CIF events.
act e';
act aut3'e1';
act aut3'e2';
act aut3'e3';

% Actions for CIF variables having certain values.
act aut''varvalue: aut'LPE';
act aut2''varvalue: aut'LPE';

% Process for behavior of the CIF specification.
proc P(
    aut': aut'LPE',
    aut2': aut'LPE'
) =
    % CIF linearized edges.
    ((aut' == aut'loc1')) -> aut3'e1' . P()
    +
    ((aut' == aut'loc2')) -> aut3'e2' . P()
    +
    ((if((aut2' == aut'loc1'), 1, 2) == 1)) -> aut3'e3' . P()
    +
    (((aut' == aut'loc1') && (aut2' == aut'loc1'))) -> e' . P(aut' = aut'loc2', aut2' = aut'loc2')
    +
    (((aut' == aut'loc1') && (aut2' == aut'loc2'))) -> e' . P(aut' = aut'loc2', aut2' = aut'loc1')
    +
    (((aut' == aut'loc2') && (aut2' == aut'loc1'))) -> e' . P(aut' = aut'loc1', aut2' = aut'loc2')
    +
    (((aut' == aut'loc2') && (aut2' == aut'loc2'))) -> e' . P(aut' = aut'loc1', aut2' = aut'loc1')
    +
    % CIF variable value actions.
    aut''varvalue(aut') . P()
    +
    aut2''varvalue(aut2') . P()
;

% Initialization.
init P(aut'loc1', aut'loc1');
