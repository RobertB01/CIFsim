% Generated by CIF to mCRL2.

% Actions for CIF events.
act e';

% Actions for CIF variables having certain values.
act a'x''varvalue: Int;
act a'y''varvalue: Int;

% Action for CIF marker predicate.
act marked;

% Process for behavior of the CIF specification.
proc P(
    a'x': Int,
    a'y': Int
) =
    % CIF linearized edges.
    ((((a'x' < 10) && ((-2147483647 - 1) <= if((a'x' == 0), (a'x' + 1), if((a'x' == 1), (a'x' + 2), if((a'x' == 3), if((a'y' == 0), 0, 25), a'x'))))) && ((if((a'x' == 0), (a'x' + 1), if((a'x' == 1), (a'x' + 2), if((a'x' == 3), if((a'y' == 0), 0, 25), a'x'))) <= 2147483647) && (((-2147483647 - 1) <= if((a'x' == 0), a'y', if((a'x' == 1), a'y', if((a'x' == 3), if((a'y' == 0), 1, a'y'), a'y')))) && (if((a'x' == 0), a'y', if((a'x' == 1), a'y', if((a'x' == 3), if((a'y' == 0), 1, a'y'), a'y'))) <= 2147483647))))) -> e' . P(a'x' = if((a'x' == 0), (a'x' + 1), if((a'x' == 1), (a'x' + 2), if((a'x' == 3), if((a'y' == 0), 0, 25), a'x'))), a'y' = if((a'x' == 0), a'y', if((a'x' == 1), a'y', if((a'x' == 3), if((a'y' == 0), 1, a'y'), a'y'))))
    +
    % CIF variable value actions.
    a'x''varvalue(a'x') . P()
    +
    a'y''varvalue(a'y') . P()
    +
    % CIF 'marked' action.
    (false) -> marked . P()
;

% Initialization.
init P(0, 0);
