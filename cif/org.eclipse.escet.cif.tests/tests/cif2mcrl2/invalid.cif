//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010, 2024 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

event e1, e2;

group g:
  invariant 1 + 1 = 2;              // Invariant.
  invariant 1 = 3;                  // Invariant.

  initial 1 = 3;                    // Initialization predicate in a component.

  automaton no_initial:             // No initial location.
    location:
      edge e1, e2;
  end

  automaton mult_initials:          // Multiple initial locations.
    location L0:
      initial;
    location L1:
      initial;
    location L2:
      initial;
  end

  plant p:
    disc int[1..2] x1 in {1,2};     // Multiple potential initial values.
    disc int[1..2] x2 in any;       // Multiple potential initial values.
    disc bool      x3 = i;          // Not a statically evaluable initial value.
    cont cnt der 1.0;               // Continuous variable, real type/value.
    disc list bool lb = [true];     // List type/expr.

    plant invariant 1 + 1 = 2;      // Invariant.
    plant invariant 1 = 3;          // Invariant.

    location:
      initial true;
      urgent;                       // Urgent location.
      edge e2 do lb := lb + [false];   // List type/expr.
      edge e1 do (x1, x2) := (1, 1);   // Multi-assignment.
      edge e1 now;                  // Urgent edge.

      plant invariant 1 + 1 = 2;    // Invariant.
      plant invariant 1 = 3;        // Invariant.
  end

  cont x der 1;                     // Continuous variable.

  input bool i;                     // Input variable.
end
