//////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, 2023 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// This program and the accompanying materials are made available
// under the terms of the MIT License which is available at
// https://opensource.org/licenses/MIT
//
// SPDX-License-Identifier: MIT
//////////////////////////////////////////////////////////////////////////////

// -----
// Models the requirements of the game to ensure you can win and don't lose.
// The supervisor synthesized using these requirements allows only 'safe' moves.
// In this case 'safe' means that nothing gets eaten, and we can always still win the game.
// -----

import "wolf_goat_cabbage.game.cif";

// Prevent that anything gets eaten.
requirement not GameOver;

// Synthesis ensures that a marked state can always be reached.
// If that is not possible, synthesis indicates a solution does not exist by producing an 'empty supervisor' error.
// Therefore, indicate that the state in which we win should always be reachable.
marked GameWon;
